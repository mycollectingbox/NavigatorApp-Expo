{"version":3,"sources":["redux/infoSlice.js","redux/mapSlice.js","store.js","styling/theme.js","components/Header.OnlineStatus.jsx","utils/commonUtil.js","components/ChatBot.Header.jsx","components/ChatBot.ImageMap.jsx","components/Modal.WebSpeech.jsx","components/ChatBot.InputBox.jsx","components/Message.Normal.jsx","components/Message.InnerBox.jsx","components/Message.Expandable.jsx","components/Message.Options.jsx","components/Message.Start.jsx","components/Message.Main.jsx","components/ChatBot.MessageList.jsx","screens/ChatBotScreen.jsx","screens/MapNavigationScreen.jsx","routes/MyStack.js","index.js","App.js"],"names":["infoSlice","createSlice","name","initialState","instructions","instructionTexts","floor","index","reply","message","dialogMessages","reducers","setInstructions","state","action","payload","setInstructionTexts","setIndex","setReply","setMessage","setFloor","setDialogMessages","actions","selectInstructions","info","selectInstructionTexts","selectIndex","selectDialogMessages","mapSlice","mapFloor","floorArray","floorIndex","setMapFloor","console","log","setFloorArray","length","setFloorIndex","selectMapFloor","map","selectFloorArray","selectFloorIndex","store","configureStore","reducer","infoReducer","mapReducer","theme","primary","white","black","searchIcon","searchText","searchBackground","title","subTitle","storyBorder","description","inputBackground","inputText","messageBackground","danger","success","light","halfOpacitySecondary","halfOpacityPrimary","styles","StyleSheet","create","onlineStatusContainer","flexDirection","paddingHorizontal","onlineStatus","color","fontSize","statusImage","height","width","borderRadius","alignSelf","margin","OnlineStatus","View","style","Text","Image","source","uri","DOMAIN_NAME","getNowTime","today","Date","hour","getHours","min","getMinutes","toString","changePath","tmpInstructions","path","forEach","ins","error","computeVector","p1","p2","x","y","calcAngleDegrees","Math","atan2","PI","rotatePoint","point","angleInDegree","angleInRadian","cos","sin","LogBox","ignoreLogs","container","backgroundColor","paddingTop","paddingBottom","backButton","profileOptions","flex","justifyContent","alignItems","profile","borderColor","image","usernameAndOnlineStatus","usernameAndLocationName","username","fontWeight","locationName","buttonsViewStyle","options","paddingVertical","marginHorizontal","mapButton","ChatHeader","botname","sendJsonMessage","navigation","useNavigation","dispatch","useDispatch","LinearGradient","colors","TouchableOpacity","size","onPress","handleReset","navigate","borderBottomWidth","messageView","maxWidth","Imagemessage","ChatImageMap","useState","HTTP_SCHEME","imageURL","setImageURL","svgPath","setSvgPath","useSelector","useEffect","slice","ReactNativeZoomableView","maxZoom","minZoom","zoomStep","initialZoom","bindToBorders","ImageBackground","viewBox","id","refX","refY","markerUnits","markerWidth","markerHeight","orient","d","fill","stroke","strokeWidth","cx","cy","r","markerStart","markerMid","markerEnd","modalContainer","modalHeader","marginBottom","modalPromptTextStyle","marginLeft","marginRight","modalButtonStyle","borderWidth","modalResultTextStyle","ModalWebSpeech","webSpeechMiddleResult","stopRecording","Pressable","position","innerContainer","bottom","inputAndMicrophone","Platform","OS","input","paddingLeft","rightIconButtonStyle","paddingRight","borderLeftWidth","borderLeftColor","swipeToCancelView","swipeText","emoticonButton","recordingActive","recordingTime","microphoneAndLock","lockView","borderTopLeftRadius","borderTopRightRadius","sendButton","ChatInput","online","setInput","microphonecolor","setMicrophoneColor","isWebRecording","setIsWebRecording","setWebSpeechMiddleResult","recognitionWebRef","useRef","undefined","cacheInputTextRef","window","current","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onend","onresult","event","interim_transcript","final_transcript","results","resultList","confidence","isFinal","transcript","onerror","KeyboardAvoidingView","behavior","TextInput","multiline","placeholder","value","onChangeText","text","a","async","start","disabled","inputTextJson","concat","isVisible","useNativeDriver","backdropOpacity","stop","Textmessage","MessageBox","messageContent","isOnLeft","messageType","isComplete","marginVertical","startText","messageContainer","shadowColor","shadowOpacity","shadowOffset","elevation","startmessageContainer","timeView","time","iconContainer","InnerBox","isLeft","completeIndex","floorOrder","indexOf","Number","completeFloorIndex","AIcon","Animated","createAnimatedComponent","Icon","useSharedValue","uas","useAnimatedStyle","transform","translateX","TRANSLATE_X_THRESHOLD","Dimensions","get","InstructionMsgeventHandler","useAnimatedGestureHandler","onActive","ctx","translationX","onEnd","runOnJS","Speech","withTiming","rIconStyle","opacity","onGestureEvent","onHandlerStateChange","nativeEvent","left","ExpandableListView","isopen","setIsOpen","innerBox","subCategory","prev","HeadText","categoryName","sub","tinyLogo","overflow","flatli","item","padding","display","alignContent","titleView","Options","optionRefDec","renderItem","prefix","sendOption","FlatList","extraData","data","keyExtractor","horizontal","Start","instructiontext","Object","keys","Message","setScrollState","largerscale","type","NoralMsgeventHandler","enlarge","ChatMessagessList","user","scrollView","scrollViewEnable","setScrollViewEnable","newFloorArray","i","len","currentMessage","floorNumber","push","ScrollView","ref","onContentSizeChange","scrollToEnd","animated","scrollEnabled","author","crossPlatformContainer","ChatBotScreen","ws_scheme","socketUrl","onlinestatus","setOnlineStatus","useWebSocket","onOpen","onError","err","shouldReconnect","closeEvent","reconnectAttempts","reconnectInterval","lastJsonMessage","readyState","connectionStatus","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","newDict","newDict2","JSON","parse","stringify","SafeAreaView","StatusBar","barStyle","headerContainer","bodyContainer","flexGrow","bottomContainer","goBackBotton","calibrationButtonViewStyle","calibrationButtonTextStyle","textAlign","stopButtonViewStyle","bgImageStyle","guideContainer","mainTextStyle","multiColumnContaner","subKeywordViewContainer","subKeywordStyle","subTextViewContainer","flexShrink","subTextStyle","paginationButtonContainer","buttonTextStyle","modalViewContainer","modalTextStyle","modalYesButtonStyle","modalNoButtonStyle","MapNavigationScreen","route","params","infoIndex","getNextStepIndices","shift","curFloorIndex","curInfoIndex","flag","result","instructArray","ifGuideStart","getFutureInstructionText","currentFloorIndex","currentInfoIndex","future","notyet_floorIndex","notyet_index","obj","nextInstructionText","setNextInstructionText","goNextStep","res","newFloorIndex","newIndex","setModalContent","setIsModalVisible","zoomableViewRef","zoomVal","imageCenter","initialBasePoint","basePoint","angle","setAngle","scale_to_canvas","vector","targetPoint","previousAutoTotalMove","previousTransformTotalMove","updateBasePoint","rotation_angle","delta_rotation_angle","newPoint","arbitraryPoint","centerPoint","relativeCoordinate","rotatedVector","rotateRelativeToCenter","rotateLineToVertical","point1","point2","needToRotate","basePointGuide_Going","nowPathPoints","updatedAngle","disVector","rotDicVector","disX","disY","moveBy","basePointGuide","calibraOnly","zoomTo","setTimeout","calibraVector","currentPathPoints","all_points","getPathCoordinates","isModalVisible","modalContent","Button","goBackView","goBack","MaterialCommunityIcons","onTransform","zoomableViewEventObject","zoomLevel","offsetX","offsetY","img_width","img_height","rotate","borderRightColor","borderRightWidth","Stack","createStackNavigator","MyStack","Navigator","initialRouteName","screenOptions","headerShown","gestureEnabled","Screen","component","registerRootComponent","NavigationContainer"],"mappings":"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","file":"static/js/app.44c1d8de.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    instructions:{},\r\n    instructionTexts: {}, // Key: floor number; value: instruction text object\r\n    floor:-10,\r\n    index:-1,\r\n    reply:null,\r\n    message:null,\r\n    dialogMessages: [],\r\n}\r\n\r\nexport const infoSlice = createSlice({\r\n    name:'info',\r\n    initialState,\r\n    reducers:{\r\n        setInstructions:(state, action)=>{\r\n            state.instructions = action.payload;\r\n        },\r\n        setInstructionTexts: (state, action) => {\r\n            state.instructionTexts = action.payload;\r\n        },\r\n        setIndex:(state, action)=>{\r\n            state.index = action.payload;\r\n        },\r\n        setReply:(state, action)=>{\r\n            state.reply = action.payload;\r\n        },\r\n        setMessage:(state, action)=>{\r\n            state.message = action.payload;\r\n        },\r\n        setFloor:(state, action)=>{\r\n            state.floor = action.payload;\r\n        },\r\n        setDialogMessages: (state, action) => {\r\n            state.dialogMessages = action.payload;\r\n        }\r\n    },\r\n});\r\n\r\nexport const { setInstructions, setInstructionTexts, setIndex, setReply, setMessage, setFloor, setDialogMessages } = \r\n    infoSlice.actions;\r\n\r\n// Selectors\r\nexport const selectInstructions = (state) => state.info.instructions;\r\nexport const selectInstructionTexts = (state) => state.info.instructionTexts;\r\nexport const selectIndex = (state) => state.info.index;\r\nexport const selectReply = (state) => state.info.reply;\r\nexport const selectMessage = (state) => state.info.message;\r\nexport const selectFloor = (state) => state.info.floor;\r\nexport const selectDialogMessages = (state) => state.info.dialogMessages;\r\n\r\n\r\nexport default infoSlice.reducer; //nav(name) Reducer ==> navReducer","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst UNKNOWNVALUE = -100;\r\n\r\nexport const mapSlice = createSlice({\r\n    name: 'map',\r\n    initialState: {\r\n        mapFloor: UNKNOWNVALUE,\r\n        floorArray: null,\r\n        floorIndex: -1,\r\n    },\r\n    reducers:{\r\n        setMapFloor: (state, action) => {\r\n            console.log(`地圖的樓層設定為第 ${action.payload} 樓`);\r\n            state.mapFloor = action.payload;\r\n        },\r\n        setFloorArray: (state, action) => {\r\n            state.floorArray = action.payload;\r\n            if (action.payload.length > 0) {\r\n                console.log(`地圖的樓層指引依序為 ${action.payload}`);\r\n            }\r\n        },\r\n        setFloorIndex: (state, action) => {\r\n            state.floorIndex = action.payload;\r\n        }\r\n    },\r\n});\r\n\r\n\r\n// Selectors\r\nexport const selectMapFloor = (state) => state.map.mapFloor;\r\nexport const selectFloorArray = (state) => state.map.floorArray;\r\nexport const selectFloorIndex = (state) => state.map.floorIndex;\r\n\r\nexport const { setMapFloor, setFloorArray, setFloorIndex } = mapSlice.actions;\r\n\r\nexport default mapSlice.reducer; //nav(name) Reducer ==> navReducer","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport infoReducer from './redux/infoSlice'\r\nimport mapReducer from './redux/mapSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        info: infoReducer,\r\n        map: mapReducer,\r\n    },\r\n});","export const theme = {\r\n\tcolors: {\r\n\t\tprimary: '#003153',\r\n\t\twhite: '#fff',\r\n\t\tblack: '#000',\r\n\t\tsearchIcon: '#999',\r\n\t\tsearchText: '#444',\r\n\t\tsearchBackground: '#f0f0f0',\r\n\t\ttitle: \"#000\",\r\n\t\tsubTitle: '#555',\r\n\t\tstoryBorder: '#00f',\r\n\t\tdescription: '#9f9f9f',\r\n\t\tinputBackground: '#f0f0f0',\r\n\t\tinputText: '#000',\r\n\t\tmessageBackground: '#1B5583',\r\n\t\tdanger: '#df4759',\r\n\t\tsuccess: \"#4b0\",\r\n\t\tlight: '#ccc',\r\n\t\thalfOpacitySecondary: 'rgba(240, 149, 17, 0.5)',\r\n\t\thalfOpacityPrimary: 'rgba(0, 132, 255, 0.5)',\r\n\t\tstoryBorder: \"#00f\"\r\n\t},\r\n\tfontSize: {\r\n\t\ttitle: 18,\r\n\t\tsubTitle: 13,\r\n\t\tmessage: 15\r\n\t}\r\n};","import React from 'react';\r\nimport { View, Text, Image, StyleSheet} from 'react-native';\r\nimport { theme } from '../styling/theme';\r\n\r\n\r\nconst OnlineStatus = ({ onlineStatus }) => {\r\n    const onlineText = 'Online';\r\n    const onlineUri = 'https://miro.medium.com/max/512/1*nZ9VwHTLxAfNCuCjYAkajg.png';\r\n    const OfflineText = 'Offline'\r\n    const offlineUri = 'https://pngimage.net/wp-content/uploads/2018/06/rec-icon-png-5.png';\r\n    return onlineStatus ? (\r\n        <View style={styles.onlineStatusContainer}>\r\n            <Text style={styles.onlineStatus}>{onlineText}</Text>\r\n            <Image style={styles.statusImage} source={{uri:onlineUri}} />\r\n        </View>\r\n        )\r\n        :(\r\n        <View style={styles.onlineStatusContainer}>\r\n            <Text style={styles.onlineStatus}>{OfflineText}</Text>\r\n            <Image style={styles.statusImage} source={{uri:offlineUri}} />\r\n        </View>\r\n        )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    onlineStatusContainer:{\r\n\t\tflexDirection:'row',\r\n        paddingHorizontal: 20\r\n\t},\r\n    onlineStatus: {\r\n        color: theme.colors.white,\r\n        fontSize: 16,\r\n    },\r\n    statusImage:{\r\n        height: 5,\r\n        width: 5,\r\n        borderRadius: 32.5,\r\n        alignSelf:'center',\r\n        margin:3,\r\n    }\r\n})\r\nexport default OnlineStatus;","\r\nconst HTTP_SCHEME = 'https';\r\nconst DOMAIN_NAME = 'iasl.asia.edu.tw'; // 127.0.0.1\r\nconst PORT_WS = 808;\r\nconst PORT_django = 809;\r\n\r\n/** get current time */\r\nconst getNowTime = () => {\r\n    let today = new Date()\r\n    let hour = today.getHours();\r\n    let min = today.getMinutes();\r\n    if (hour < 10) {\r\n        hour = '0' + hour.toString()\r\n    }\r\n    if (min < 10) {\r\n        min = '0' + min.toString()\r\n    }\r\n    return [hour, min];\r\n};\r\n\r\n/**  Construct svg path expression from instructions */\r\nconst changePath = (tmpInstructions) => {\r\n    \r\n    let path = \"M\"\r\n    try {\r\n        tmpInstructions.forEach((ins, index) => {\r\n\r\n            if (index === 0) {\r\n                path += ins[0] + \",\" + ins[1];\r\n            }\r\n            else {\r\n                path+= \"L\" + ins[0]+ \",\" + ins[1];\r\n            }\r\n        });\r\n    }\r\n    catch(error) {\r\n        throw error;\r\n    }\r\n    // console.log('svg path = ', path);\r\n    return path\r\n};\r\n\r\n/**  Construct svg path's point array from instructions */\r\nconst getPathCoordinates = (tmpInstructions) => {\r\n    let all_points = [];\r\n\r\n    tmpInstructions.forEach((ins) => {\r\n        all_points.push({x: ins[0], y: ins[1]});\r\n    });\r\n\r\n    return all_points;\r\n};\r\n\r\n\r\n// Basic Math\r\nconst radian2Degree = (radianValue) => {\r\n    return radianValue * 180 / Math.PI;\r\n};\r\n\r\nconst degree2Radian = (degreeValue) => {\r\n    return degreeValue * Math.PI / 180;\r\n}\r\n\r\nconst computeVector = (p1, p2) => {\r\n    return {\r\n        x: p2.x - p1.x, \r\n        y: p2.y - p1.y\r\n    };\r\n};\r\n\r\n/** get -180~180 degree number. For canvas, 從x軸起算，順時針為正的角度 */\r\nconst calcAngleDegrees = (x, y) => {\r\n    return radian2Degree(Math.atan2(y, x));\r\n}\r\n\r\n/** angleInDegree: 順時針的角度 */\r\nconst rotatePoint = (point, angleInDegree) => {\r\n    const angleInRadian = degree2Radian(angleInDegree);\r\n\r\n    return {\r\n        x: point.x * Math.cos(angleInRadian) - point.y * Math.sin(angleInRadian), \r\n        y: point.x * Math.sin(angleInRadian) + point.y * Math.cos(angleInRadian)\r\n    };\r\n};\r\n\r\n/** angleInDegree: 順時針的角度 */\r\nconst rotateRelativeToCenter = (arbitraryPoint, centerPoint, angleInDegree) => {\r\n    const relativeCoordinate = {x: arbitraryPoint.x - centerPoint.x, y: arbitraryPoint.y - centerPoint.y};\r\n\r\n    let rotatedVector = rotatePoint(relativeCoordinate, angleInDegree);\r\n    return {\r\n        x: centerPoint.x + rotatedVector.x, \r\n        y: centerPoint.y + rotatedVector.y\r\n    };\r\n};\r\n\r\nexport {\r\n    DOMAIN_NAME,\r\n    PORT_WS,\r\n    PORT_django,\r\n    HTTP_SCHEME,\r\n\r\n    getNowTime,\r\n    changePath, \r\n    getPathCoordinates, \r\n\r\n    radian2Degree, \r\n    degree2Radian,\r\n    calcAngleDegrees,\r\n    computeVector,\r\n    rotatePoint,\r\n    rotateRelativeToCenter,\r\n};","import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, LogBox } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { theme } from '../styling/theme';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport OnlineStatus from './Header.OnlineStatus';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { getNowTime } from '../utils/commonUtil';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setDialogMessages, setInstructionTexts } from '../redux/infoSlice';\r\nimport { setFloorArray, setMapFloor } from '../redux/mapSlice';\r\n\r\n// ignore this warning and pass functions thought route params safely.\r\nLogBox.ignoreLogs([\r\n\t'Non-serializable values were found in the navigation state',\r\n]);\r\n\r\nconst ChatHeader = ({ botname, locationName, onlineStatus, sendJsonMessage}) => {\r\n\t// use the useNavigation to provide the navigation prop automatically\r\n\tconst navigation = useNavigation();\r\n\r\n\t// redux\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleReset = () => {\r\n\t\tconst [hour, min] = getNowTime();\r\n        sendJsonMessage({\r\n            'author': \"user\",\r\n\t\t\t'type':'text',\r\n\t\t\t'message': '/done',\r\n\t\t\t'time': hour + ':' + min,\r\n        });\r\n        dispatch(setDialogMessages([]));\r\n\t\tdispatch(setInstructionTexts({}));\r\n        dispatch(setMapFloor(-100));\r\n        dispatch(setFloorArray([]));\r\n\t}\r\n\r\n    return (\r\n\t\t<LinearGradient colors={['#C33764', '#1D2671', '#192f6a']} style={styles.container}>\r\n\t\t\t<TouchableOpacity style={styles.backButton}>\r\n\t\t\t\t<Icon name=\"angle-left\" size={30} color={theme.colors.white} />\r\n\t\t\t</TouchableOpacity>\r\n\t\t\t<View style={styles.profileOptions}>\r\n\t\t\t\t<TouchableOpacity style={styles.profile}>\r\n\t\t\t\t\t<View style={styles.usernameAndLocationName}>\r\n\t\t\t\t\t\t<View style={styles.usernameAndOnlineStatus}>\r\n\t\t\t\t\t\t\t<Text style={styles.username}>{botname}</Text>\r\n\t\t\t\t\t\t\t<OnlineStatus onlineStatus={onlineStatus}/>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<Text style={styles.locationName}>{locationName}</Text>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t<View style={styles.buttonsViewStyle}>\r\n\t\t\t\t\t<TouchableOpacity style={styles.options} onPress={() => handleReset()}>\r\n\t\t\t\t\t\t<Text style={styles.mapButton}>重新對話</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t<TouchableOpacity style={styles.options} onPress={() => navigation.navigate(\"MapNavigation\", {\r\n\t\t\t\t\t\tsendJsonMessage\r\n\t\t\t\t\t})}>\r\n\t\t\t\t\t\t<Text style={styles.mapButton}>地圖模式</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</LinearGradient>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tbackgroundColor: theme.colors.primary,\r\n\t\tpaddingTop: 25,\r\n\t\tpaddingBottom: 10,\r\n\t},\r\n\tbackButton: {\r\n\t\talignSelf: \"center\",\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tprofileOptions: {\r\n\t\tflex: 1,\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tprofile: {\r\n\t\tflexDirection: \"row\",\r\n\t\talignItems: \"center\",\r\n\t\tborderColor: \"#fff\",\r\n\t\tflex: 4,\r\n\t},\r\n\timage: {\r\n\t\theight: 65,\r\n\t\twidth: 65,\r\n\t\tborderRadius: 32.5,\r\n\t}\r\n\t,\r\n\tusernameAndOnlineStatus: {\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tusernameAndLocationName: {\r\n\t\tflexDirection: \"column\",\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tusername: {\r\n\t\tcolor: theme.colors.white,\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: \"bold\",\r\n\t},\r\n\tlocationName: {\r\n\t\tcolor: theme.colors.white,\r\n\t\tfontWeight: \"bold\",\r\n\t\tfontSize: 16,\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tbuttonsViewStyle: {\r\n\t\tflexDirection: 'row',\r\n\t},\r\n\toptions: {\r\n\t\tpaddingHorizontal: 6, \r\n\t\tpaddingVertical: 10, \r\n\t\tborderRadius: 5, \r\n\t\tbackgroundColor: \"#68a0cf\",\r\n\t\tmarginHorizontal: 5,\r\n\t},\r\n\tmapButton: {\r\n\t\tcolor: \"white\"\r\n\t}\r\n})\r\n\r\nexport default ChatHeader","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { View, StyleSheet, ImageBackground} from 'react-native';\r\nimport ReactNativeZoomableView from '@openspacelabs/react-native-zoomable-view/src/ReactNativeZoomableView';\r\nimport Svg ,{ Defs, Marker, Path, Circle } from 'react-native-svg';\r\n\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { selectIndex, selectInstructions } from '../redux/infoSlice';\r\nimport { selectMapFloor } from \"../redux/mapSlice\";\r\nimport { changePath, DOMAIN_NAME, HTTP_SCHEME, PORT_django } from \"../utils/commonUtil\";\r\n\r\n\r\nconst ChatImageMap = () => {\r\n    // https://reactjs.org/logo-og.png\r\n    // http://61.219.68.130:809/static/image/03.jpeg\r\n    const [imageURL, setImageURL] = useState(`${HTTP_SCHEME}://${DOMAIN_NAME}:${PORT_django}/static/image/03.jpeg`)\r\n\r\n    // svg-related settings\r\n    var svg_width = 409.6;\r\n    var svg_height = 222.8;\r\n    var viewBoxProps = \"0 0 1024 557\"; // equal to original image's size\r\n    const [svgPath, setSvgPath] = useState('M 0 0 L 0 0');\r\n    \r\n    // redux\r\n    const instructions = useSelector(selectInstructions);\r\n    const mapFloor = useSelector(selectMapFloor);\r\n    const index = useSelector(selectIndex);\r\n\r\n    useEffect(() => {\r\n        if (mapFloor > -100 && index >= 0) {\r\n            let tmpInstructions = instructions[mapFloor.toString()];\r\n            if (index > 0) {\r\n                tmpInstructions = tmpInstructions.slice(index);\r\n            }\r\n            setSvgPath(changePath(tmpInstructions));\r\n            setImageURL(`${HTTP_SCHEME}://${DOMAIN_NAME}:${PORT_django}/static/image/0${mapFloor}.jpeg`);\r\n        }\r\n        else {\r\n            // default image before indoor guide\r\n            setSvgPath('M 0 0 L 0 0');\r\n            setImageURL(`${HTTP_SCHEME}://${DOMAIN_NAME}:${PORT_django}/static/image/iFG-cover.jpg`);\r\n        }\r\n    }, [mapFloor, index]);\r\n\r\n    \r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ReactNativeZoomableView\r\n                maxZoom={3}\r\n                minZoom={1}\r\n                zoomStep={0.5}\r\n                initialZoom={1}\r\n                bindToBorders={true}\r\n                style={styles.messageView}\r\n            >\r\n                <ImageBackground source={{ uri: imageURL }} style={[styles.Imagemessage, {width: svg_width, height: svg_height}]}>\r\n                    <Svg width={svg_width} height={svg_height} viewBox={viewBoxProps}>\r\n                        <Defs>\r\n                            <Marker\r\n                                id=\"Triangle\"\r\n                                viewBox=\"0 0 10 10\"\r\n                                refX=\"0\"\r\n                                refY=\"5\"\r\n                                markerUnits=\"strokeWidth\"\r\n                                markerWidth=\"3\"\r\n                                markerHeight=\"3\"\r\n                                orient=\"auto\"\r\n                            >\r\n                                <Path\r\n                                    d=\"M 0 0 L 10 5 L 0 10 z\" \r\n                                    fill=\"black\"\r\n                                    stroke=\"red\"\r\n                                    strokeWidth=\"1\"\r\n                                />\r\n                            </Marker>\r\n                            <Marker\r\n                                id=\"startPoint\"\r\n                                viewBox=\"0 0 10 10\"\r\n                                refX=\"5\"\r\n                                refY=\"5\"\r\n                                markerUnits=\"strokeWidth\"\r\n                                markerWidth=\"3\"\r\n                                markerHeight=\"3\"\r\n                                orient=\"auto\"\r\n                            >\r\n                                    <Circle \r\n                                        cx=\"5\" \r\n                                        cy=\"5\" \r\n                                        r=\"5\" \r\n                                        fill=\"green\"\r\n                                    />\r\n                            </Marker>\r\n                            <Marker\r\n                                id=\"midPoint\"\r\n                                viewBox=\"0 0 10 10\"\r\n                                refX=\"5\"\r\n                                refY=\"5\"\r\n                                markerUnits=\"strokeWidth\"\r\n                                markerWidth=\"2\"\r\n                                markerHeight=\"2\"\r\n                                orient=\"auto\"\r\n                            >\r\n                                <Circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"grey\"/>\r\n                            </Marker>\r\n                        </Defs>\r\n\r\n                        <Path\r\n                            d={svgPath}\r\n                            // d=\"M 0 0 L 10 5 L 0 10 z\"\r\n                            fill=\"none\"\r\n                            stroke=\"black\"\r\n                            strokeWidth=\"10\"\r\n                            markerStart=\"url(#startPoint)\"\r\n                            markerMid=\"url(#midPoint)\"\r\n                            markerEnd=\"url(#Triangle)\"\r\n                        />\r\n                    </Svg>\r\n                </ImageBackground>\r\n            </ReactNativeZoomableView>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderColor: \"#9879e0\",\r\n        borderBottomWidth: 1.5,\r\n        flex: 0.6\r\n    },\r\n    messageView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tmaxWidth: \"100%\",\r\n\t},\r\n    Imagemessage: {\r\n\t\talignSelf: \"center\",\r\n\t},\r\n})\r\n\r\nexport default ChatImageMap;","import { Pressable, StyleSheet, Text, View } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { theme } from \"../styling/theme\";\r\n\r\nconst ModalWebSpeech = ({webSpeechMiddleResult, stopRecording}) => {\r\n    return (\r\n        <View style={styles.modalContainer}>\r\n            <View style={styles.modalHeader}>\r\n                <Icon name=\"microphone\" size={32} color={theme.colors.danger}></Icon>\r\n                <Text style={styles.modalPromptTextStyle}>辨識中，請說話</Text>\r\n                <Pressable style={styles.modalButtonStyle} onPress={() => stopRecording()}>\r\n                    <Text>關閉</Text>\r\n                </Pressable>\r\n            </View>\r\n            <View>\r\n                <Text style={styles.modalResultTextStyle}>{webSpeechMiddleResult}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tmodalContainer: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tpaddingHorizontal: 20,\r\n\t\tpaddingVertical: 20,\r\n\t},\r\n\tmodalHeader: {\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\tmarginBottom: 12,\r\n\t},\r\n\tmodalPromptTextStyle: {\r\n\t\tmarginLeft: 10,\r\n\t\tmarginRight: 50,\r\n\t},\r\n\tmodalButtonStyle: {\r\n\t\tborderColor: '#dddddf',\r\n\t\tborderWidth: 2,\r\n\t\tborderRadius: 8,\r\n\t\tpaddingVertical: 10,\r\n\t\tpaddingHorizontal: 15\r\n\t},\r\n\tmodalResultTextStyle: {\r\n\t\tcolor: '#2596be',\r\n\t\tfontSize: 18,\r\n\t}\r\n});\r\n \r\nexport default ModalWebSpeech;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { View,StyleSheet,TextInput, Platform, TouchableOpacity,KeyboardAvoidingView } from \"react-native\";\r\nimport Modal from \"react-native-modal\";\r\n\r\n// import Voice from \"@react-native-voice/voice\";\r\n\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { theme } from \"../styling/theme\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFloorArray, setMapFloor } from \"../redux/mapSlice\";\r\nimport { selectDialogMessages, setDialogMessages, setInstructionTexts } from \"../redux/infoSlice\";\r\nimport { getNowTime } from \"../utils/commonUtil\";\r\nimport ModalWebSpeech from \"./Modal.WebSpeech\";\r\n\r\nconst ChatInput = ({ online, sendJsonMessage}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst dialogMessages = useSelector(selectDialogMessages);\r\n\r\n\r\n\tconst [input, setInput] = useState(\"\");\r\n\tconst [microphonecolor, setMicrophoneColor] = useState(theme.colors.description);\r\n\tconst [isWebRecording, setIsWebRecording] = useState(false);\r\n\tconst [webSpeechMiddleResult, setWebSpeechMiddleResult] = useState('');\r\n\t\r\n\tlet recognitionWebRef = useRef(undefined);\r\n\tlet cacheInputTextRef = useRef('');\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Platform.OS === 'web') {\r\n\t\t\tif ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\r\n\t\t\t\tconsole.log(\"speech recognition API supported\");\r\n\r\n\t\t\t\trecognitionWebRef.current = new window.webkitSpeechRecognition();\r\n\t\t\t\trecognitionWebRef.current.continuous = true;\r\n\t\t\t\trecognitionWebRef.current.interimResults = true;\r\n\t\t\t\trecognitionWebRef.current.lang = 'cmn-Hant-TW'; // 中文 (台灣)\r\n\r\n\t\t\t\t// register related events\r\n\t\t\t\trecognitionWebRef.current.onstart = () => { // 開始辨識\r\n\t\t\t\t\t// console.log('webkitSpeechRecognition event: onstart');\r\n\t\t\t\t\tsetIsWebRecording(true); // 設定為辨識中\r\n\t\t\t\t\tsetMicrophoneColor(theme.colors.danger);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcacheInputTextRef.current = input;\r\n\t\t\t\t};\r\n\t\t\t\trecognitionWebRef.current.onend = () => { // 辨識完成\r\n\t\t\t\t\t// console.log('webkitSpeechRecognition event: onend');\r\n\t\t\t\t\tsetIsWebRecording(false); // 設定為「非辨識中」\r\n\t\t\t\t\tsetMicrophoneColor(theme.colors.description);\r\n\t\t\t\t};\r\n\t\t\t\trecognitionWebRef.current.onresult = (event) => { // 辨識有任何結果時\r\n\t\t\t\t\t// console.log('event.results = ', event.results);\r\n\t\t\t\t\tvar interim_transcript = '';\r\n\t\t\t\t\tvar final_transcript = '';\r\n\t\r\n\t\t\t\t\tfor (let resultList of event.results) {\r\n\t\t\t\t\t\t// [0]: SpeechRecognitionAlternative {transcript: '活動中心地下室', confidence: 0.009999999776482582}\r\n\t\t\t\t\t\tif (resultList[0].confidence < 0.000001) {\r\n\t\t\t\t\t\t\tcontinue; // 不取confidence接近0的結果\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (resultList.isFinal) {\r\n\t\t\t\t\t\t\tfinal_transcript += resultList[0].transcript;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tinterim_transcript += resultList[0].transcript;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// this.interimTranscriptSubject.next(interim_transcript);\r\n\t\t\t\t\t// this.finalTranscriptSubject.next(final_transcript);\r\n\t\t\t\t\tsetWebSpeechMiddleResult(interim_transcript);\r\n\t\t\t\t\tsetInput(cacheInputTextRef.current + final_transcript);\r\n\t\t\t\t};\r\n\t\t\t\trecognitionWebRef.current.onerror = (event) => {\r\n\t\t\t\t\tif (event.error === 'not-allowed') {\r\n\t\t\t\t\t\t// Permission to use microphone is blocked.\r\n\t\t\t\t\t\tconsole.log('webkitSpeechRecognition event: onerror');\r\n\t\t\t\t\t\tconsole.log(event);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"speech recognition API not supported\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Voice.getSpeechRecognitionServices();\r\n\t\t\t// Voice.onSpeechStart = onSpeechStartHandler;\r\n\t\t\t// Voice.onSpeechEnd = onSpeechEndHandler;\r\n\t\t\t// Voice.onSpeechResults = onSpeechResultsHandler;\r\n\t\t\t// Voice.onSpeechError = onSpeechErrorHandler;\r\n\r\n\t\t\t// return () => {\r\n\t\t\t// \tVoice.destroy().then(Voice.removeAllListeners);\r\n\t\t\t// }\r\n\t\t}\r\n\t}, [])\r\n\r\n\t// const onSpeechErrorHandler = async (e) => {\r\n\t// \tconsole.log(\"error ==>\", e)\r\n\t// \tawait destroyVoiceInstance()\r\n\t// }\r\n\r\n\t// const destroyVoiceInstance = async () => {\r\n\t// \ttry{\r\n\t// \t\tawait Voice.stop();\r\n\t// \t\tawait Voice.destroy().then(Voice.removeAllListeners());\r\n\t// \t}\r\n\t// \tcatch(e){\r\n\t// \t\tconsole.log(e)\r\n\t// \t}\r\n\t\t\r\n\t// }\r\n\t\r\n\t// const onSpeechStartHandler = async (e) => {\r\n\t// \tconsole.log(\"start handler==>>>\", e)\r\n\t// }\r\n\t// const onSpeechEndHandler = async (e) => {\r\n\t// \tconsole.log(\"stop handler\", e)\r\n\t// \ttry {\r\n\t// \t\tawait Voice.stop()\r\n\t// \t\tsetMicrophoneColor(theme.colors.description)\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.log(\"error raised\", error)\r\n\t// \t}\r\n\t// }\r\n\t\r\n\t// const onSpeechResultsHandler = async (e) => {\r\n\t// \tlet text = e.value[0]\r\n\t// \tlet result = input + text\r\n\t// \tsetInput(result)\r\n\t// \tconsole.log(\"speech result handler\", e)\r\n\t// \ttry {\r\n\t// \t\tawait Voice.stop()\r\n\t// \t\tsetMicrophoneColor(theme.colors.description)\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.log(\"error raised\", error)\r\n\t// \t}\r\n\t// }\r\n\t\r\n\tconst startRecording = async () => {\r\n\t\tif (Platform.OS === 'web') {\r\n\t\t\trecognitionWebRef.current.start();\r\n\t\t}\r\n\t\t// else {\r\n\t\t// \ttry {\r\n\t\t// \t\tsetMicrophoneColor(theme.colors.danger)\r\n\t\t// \t\tawait Voice.start('zh-TW', {\r\n\t\t// \t\t\t\"RECOGNIZER_ENGINE\": \"GOOGLE\",\r\n\t\t// \t\t\t \"EXTRA_PARTIAL_RESULTS\": true\r\n\t\t// \t\t  })\r\n\t\t// \t\tconsole.log('started')\r\n\t\t// \t} \r\n\t\t// \tcatch (error) {\r\n\t\t// \t\tconsole.log(\"error raised\", error)\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\tconst stopRecording = async () => {\r\n\t\tif (Platform.OS === 'web') {\r\n\t\t\trecognitionWebRef.current.stop();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// try {\r\n\t\t\t// \tawait Voice.stop()\r\n\t\t\t// \tsetMicrophoneColor(theme.colors.description)\r\n\t\t\t// } \r\n\t\t\t// catch (error) {\r\n\t\t\t// \tconsole.log(\"error raised\", error)\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tif (input === '') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet [hour, min] = getNowTime();\r\n\r\n\t\tlet inputTextJson = {\r\n\t\t\t'author': \"user\",\r\n\t\t\t'type':'text',\r\n\t\t\t'message': input,\r\n\t\t\t'time': hour + ':' + min,\r\n\t\t}\r\n\t\tsendJsonMessage(inputTextJson);\r\n\r\n\t\tif (input !== \"/done\") {\r\n\t\t\tdispatch(setDialogMessages(dialogMessages.concat(inputTextJson)));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdispatch(setDialogMessages([]));\r\n\t\t\tdispatch(setMapFloor(-100));\r\n\t\t\tdispatch(setInstructionTexts({}));\r\n\t\t\tdispatch(setFloorArray([]));\r\n\t\t}\r\n\r\n\t\tsetInput('');\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} style={styles.container}>\r\n\r\n\t\t\t<View style={styles.innerContainer}>\r\n\t\t\t\t<View style={styles.inputAndMicrophone}>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\tplaceholder={\"Type something...\"}\r\n\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\tonChangeText={(text) => setInput(text)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tstyle={styles.rightIconButtonStyle}\r\n\t\t\t\t\t\tonPress={startRecording}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<Icon\r\n\t\t\t\t\t\tname=\"microphone\"\r\n\t\t\t\t\t\tsize={23}\r\n\t\t\t\t\t\tcolor={microphonecolor}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\r\n\t\t\t\t</View>\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tstyle={styles.sendButton} \r\n\t\t\t\t\tdisabled={!online} \r\n\t\t\t\t\tonPress={handleSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Icon\r\n\t\t\t\t\t\tname=\"send\"\r\n\t\t\t\t\t\tsize={23}\r\n\t\t\t\t\t\tcolor={theme.colors.white}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TouchableOpacity>\r\n\r\n\r\n\t\t\t\t{/** Modal implementation */}\r\n\t\t\t\t<Modal isVisible={isWebRecording} useNativeDriver={true} backdropOpacity={0.5}>\r\n\t\t\t\t\t<ModalWebSpeech webSpeechMiddleResult={webSpeechMiddleResult} stopRecording={stopRecording} />\r\n\t\t\t\t</Modal>\r\n\t\t\t</View>\r\n      \t\t\r\n\t  \t</KeyboardAvoidingView>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackgroundColor: theme.colors.white,\r\n\t\tposition:\"relative\",\r\n\t},\r\n\tinnerContainer: {\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 13,\r\n\t\tbottom: 2,\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\tflexDirection: \"row\",\r\n\t\tpaddingVertical: 1,\r\n\t\theight: 70,\r\n\t},\r\n\tinputAndMicrophone: {\r\n\t\tflexDirection: \"row\",\r\n\t\tbackgroundColor: theme.colors.inputBackground,\r\n\t\tflex: 3,\r\n\t\tmarginRight: 10,\r\n\t\tpaddingVertical: Platform.OS === \"ios\" ? 10 : 0,\r\n\t\tborderRadius: 30,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n\tinput: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tpaddingLeft: 20,\r\n\t\tmargin: 3,\r\n\t\tcolor: theme.colors.inputText,\r\n\t\tflex: 2,\r\n\t\tfontSize: 15,\r\n\t\theight: 35,\r\n\t\talignSelf: \"center\",\r\n\t\tjustifyContent:'center',\r\n\t},\r\n\trightIconButtonStyle: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingRight: 20,\r\n\t\tpaddingLeft: 10,\r\n\t\tborderLeftWidth: 1,\r\n\t\tborderLeftColor: \"#fff\",\r\n\t},\r\n\tswipeToCancelView: {\r\n\t\tflexDirection: \"row\",\r\n\t\talignItems: \"center\",\r\n\t\tmarginRight: 30,\r\n\t},\r\n\tswipeText: {\r\n\t\tcolor: theme.colors.description,\r\n\t\tfontSize: 15,\r\n\t},\r\n\temoticonButton: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\trecordingActive: {\r\n\t\tflexDirection: \"row\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\trecordingTime: {\r\n\t\tcolor: theme.colors.description,\r\n\t\tfontSize: 20,\r\n\t\tmarginLeft: 5,\r\n\t},\r\n\tmicrophoneAndLock: {\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tlockView: {\r\n\t\tbackgroundColor: \"#eee\",\r\n\t\twidth: 60,\r\n\t\talignItems: \"center\",\r\n\t\tborderTopLeftRadius: 30,\r\n\t\tborderTopRightRadius: 30,\r\n\t\theight: 130,\r\n\t\tpaddingTop: 20,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: theme.colors.primary,\r\n\t\tborderRadius: 40,\r\n\t\theight: 40,\r\n\t\twidth: 40,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tpaddingRight: 2,\r\n\t},\r\n});\r\n\r\nexport default ChatInput;","import React from 'react';\r\nimport { View, Text, StyleSheet} from 'react-native';\r\n\r\n\r\nconst MessageBox = ({ messageContent, isOnLeft, messageType, isComplete}) => {\r\n\r\n\tlet finishTextColorStyle = {\r\n\t\tcolor: \"#d1d2de\",\r\n\t};\r\n\r\n\r\n    return (\r\n        <View style={styles.messageView}>\r\n            <Text style={[styles.Textmessage, isOnLeft(messageType), isComplete? finishTextColorStyle: {}]}>\r\n                {messageContent}\r\n            </Text>\r\n        </View>\r\n        \r\n    );\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tmessageView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tmaxWidth: \"80%\",\r\n\t},\r\n\tTextmessage: {\r\n\t\tcolor: \"white\",\r\n\t\talignSelf: \"flex-start\",\r\n\t\tfontSize: 15,\r\n\t},\r\n})\r\n\r\nexport default MessageBox;","import React from \"react\";\r\nimport { View, Text, StyleSheet, Dimensions } from \"react-native\";\r\n\r\nimport MessageBox from \"./Message.Normal\";\r\nimport Animated, {\r\n\tuseAnimatedStyle,\r\n\tuseAnimatedGestureHandler,\r\n\tuseSharedValue,\r\n\twithTiming,\r\n\trunOnJS,\r\n} from \"react-native-reanimated\";\r\nimport {\r\n\tPanGestureHandler,\r\n} from \"react-native-gesture-handler\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIndex } from '../redux/infoSlice';\r\nimport { setFloor, setIndex } from \"../redux/infoSlice\";\r\nimport { theme } from \"../styling/theme\";\r\nimport * as Speech from 'expo-speech';\r\nimport { selectFloorArray, selectFloorIndex, setFloorIndex, setMapFloor } from \"../redux/mapSlice\";\r\n\r\nconst InnerBox = ({ index,message,isOnLeft,floor, messageType,time,isLeft}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst floorArray = useSelector(selectFloorArray);\r\n\tconst completeIndex = useSelector(selectIndex);\r\n\r\n\tconst floorOrder = floorArray.indexOf(Number(floor));\r\n\tconst completeFloorIndex = useSelector(selectFloorIndex);\r\n\r\n    \r\n\tconst AIcon = Animated.createAnimatedComponent(Icon)\r\n\r\n    const x = useSharedValue(0);\r\n    const uas = useAnimatedStyle(() => {\r\n\t\treturn {\r\n\t\t\ttransform: [{ translateX: x.value }]\r\n\t\t}\r\n\t});\r\n    const SCREEN_WIDTH = Dimensions.get('window').width\r\n\tconst TRANSLATE_X_THRESHOLD = - SCREEN_WIDTH *0.2\r\n\r\n\tconst InstructionMsgeventHandler = useAnimatedGestureHandler({\r\n\t\tonActive: (event, ctx) => {\r\n\t\t\tif (isLeft){\r\n\t\t\t\tx.value = event.translationX;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd: (event, ctx) => {\r\n\t\t\tconst shouldBeDismissed = x.value < TRANSLATE_X_THRESHOLD\r\n\t\t\tif (shouldBeDismissed){\r\n\t\t\t\t// runOnJS(Tts.speak)(message);\r\n\t\t\t\trunOnJS(Speech.speak)(message)\r\n\t\t\t}\r\n\t\t\tx.value = withTiming(0);\r\n\t\t}\r\n\t});\r\n\r\n\tconst rIconStyle = useAnimatedStyle(()=>{\r\n\t\tconst opacity = withTiming(\r\n\t\t\tx.value < TRANSLATE_X_THRESHOLD ? 1 : 1\r\n\t\t);\r\n\t\treturn { opacity }\r\n\t})\r\n\r\n    return (\r\n        <View style={[styles.container]}>\r\n\r\n            <PanGestureHandler\r\n                onGestureEvent={InstructionMsgeventHandler}\r\n                onHandlerStateChange={({ nativeEvent }) => {\r\n                    if(nativeEvent.translationX > 40){\r\n                        dispatch(setIndex(index));\r\n                        dispatch(setFloor(floor));\r\n\t\t\t\t\t\tdispatch(setFloorIndex(floorOrder));\r\n\t\t\t\t\t\tdispatch(setMapFloor(floor));\r\n                        console.log('complete floor index, index and floor : ', floorOrder, index, floor)\r\n                    }\r\n                }}\r\n            >\r\n\t\t\t\t<Animated.View\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\tstyles.messageContainer,\r\n\t\t\t\t\t\tisOnLeft(\"messageContainer\"),\r\n\t\t\t\t\t\tuas\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n                            <MessageBox \r\n                                \r\n                                messageContent={message}\r\n                                isOnLeft={isOnLeft} \r\n                                messageType={messageType}\r\n\t\t\t\t\t\t\t\tisComplete={floorOrder < completeFloorIndex || (floorOrder == completeFloorIndex && index < completeIndex)}\r\n\t\t\t\t\t\t\t>\r\n\r\n                            </MessageBox>\r\n                            <View style={styles.timeView}>\r\n                                <Text style={[styles.time, isOnLeft(\"time\")]}>\r\n                                    {time}\r\n                                </Text>\r\n                            </View>\r\n\t\t\t\t\t\t\t<Animated.View style={[styles.iconContainer, rIconStyle]}>\r\n\t\t\t\t\t\t\t\t\t<AIcon\r\n\t\t\t\t\t\t\t\t\t\tname=\"volume-up\"\r\n\t\t\t\t\t\t\t\t\t\tcolor={theme.colors.description}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{left:30}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<AIcon\r\n\t\t\t\t\t\t\t\t\t\tname=\"long-arrow-left\"\r\n\t\t\t\t\t\t\t\t\t\tcolor={theme.colors.description}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{left:30}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Animated.View>\r\n                        \r\n                    </Animated.View>\r\n            </PanGestureHandler>\r\n         </View>\r\n\r\n    )\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tpaddingVertical: 10,\r\n\t\tmarginVertical: 5,\r\n\t},\r\n\tstartText:{\r\n\t\t\r\n\t},\r\n\tmessageContainer: {\r\n\t\tbackgroundColor: '#1D2671',\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n\tstartmessageContainer: {\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n\r\n\ttimeView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\r\n\ttime: {\r\n\t\tcolor: \"lightgray\",\r\n\t\tfontSize: 10,\r\n\t},\r\n\r\n\ticonContainer:{\r\n\t\t// position:'absolute',\r\n\t\t// right:'40%',\r\n\t\t// height:30,\r\n\t\t// width:30,\r\n\t\t// top:'40%',\r\n\t\tjustifyContent:'center',\r\n\t\talignItems:'center',\r\n\t\tfontSize:30,\r\n\t},\r\n\trightIconButtonStyle: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingRight: 20,\r\n\t\tpaddingLeft: 5,\r\n\t},\r\n    messageView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tmaxWidth: \"80%\",\r\n\t},\r\n\tTextmessage: {\r\n\t\tcolor: \"white\",\r\n\t\talignSelf: \"flex-start\",\r\n\t\tfontSize: 15,\r\n\t},\r\n});\r\n\r\nexport default InnerBox;\r\n","import React, {  useState } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity,Dimensions } from \"react-native\";\r\n\r\nimport Animated, {\r\n\tuseAnimatedStyle,\r\n\tuseSharedValue,\r\n} from \"react-native-reanimated\";\r\nimport { theme } from \"../styling/theme\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport InnerBox from \"./Message.InnerBox\"\r\n\r\nconst ExpandableListView = ({ messageContent, isOnLeft, messageType, time, isLeft, floor}) => {\r\n    const [isopen, setIsOpen] = useState(false)\r\n    const x = useSharedValue(0);\r\n\r\n    var innerBox = messageContent[0].subCategory\r\n    \r\n    const uas = useAnimatedStyle(() => {\r\n\t\treturn {\r\n\t\t\ttransform: [{ translateX: x.value }]\r\n\t\t}\r\n\t});\r\n    const SCREEN_WIDTH = Dimensions.get('window').width;\r\n\tconst TRANSLATE_X_THRESHOLD = - SCREEN_WIDTH *0.2;\r\n\r\n\r\n    return (\r\n        <View>\r\n            <TouchableOpacity onPress={()=> setIsOpen(prev => !prev)}>\r\n                <View style={[styles.container]}>\r\n                    <Animated.View style={uas}>\r\n                        <View\r\n\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\tstyles.messageContainer,\r\n\t\t\t\t\t\t\t\tisOnLeft(\"messageContainer\"),\r\n\t\t\t\t\t\t\t]}\r\n                        >\r\n\t\t\t\t\t\t\t<Text style={styles.HeadText}>{messageContent[0].categoryName + \"之指示 \"}    \r\n\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\tname= {isopen ?  \"arrow-up\" : \"arrow-down\"}\r\n\t\t\t\t\t\t\t\t\tcolor={theme.colors.description}\r\n\t\t\t\t\t\t\t\t\tstyle={[{left:30}]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Text>\r\n                        </View>\r\n                    </Animated.View>\r\n                </View>\r\n            </TouchableOpacity>\r\n\r\n\r\n\t\t\t{isopen && innerBox.map((sub,index)=>(\r\n\t\t\t<InnerBox\r\n\t\t\t\tkey={index}\r\n\t\t\t\tindex={sub.index}\r\n\t\t\t\tmessage={sub.name}\r\n\t\t\t\tisOnLeft={isOnLeft} \r\n\t\t\t\tfloor={floor}\r\n\t\t\t\tmessageType={messageType}\r\n\t\t\t\ttime={time}\r\n\t\t\t\tisLeft={isLeft}\r\n\t\t\t/>\r\n\r\n\t\t\t))}\r\n\r\n        </View>\r\n    )\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tpaddingVertical: 10,\r\n\t\tmarginVertical: 5,\r\n\t},\r\n\tstartText:{\r\n\t\t\r\n\t},\r\n\tmessageContainer: {\r\n\t\tbackgroundColor: '#1D2671',\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n\tstartmessageContainer: {\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n\r\n\ttimeView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\r\n\ttime: {\r\n\t\tcolor: \"lightgray\",\r\n\t\tfontSize: 10,\r\n\t},\r\n\r\n\ticonContainer:{\r\n\t\tjustifyContent:'center',\r\n\t\talignItems:'center',\r\n\t\tfontSize:30,\r\n\t},\r\n\trightIconButtonStyle: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingRight: 20,\r\n\t\tpaddingLeft: 5,\r\n\t},\r\n    messageView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tmaxWidth: \"80%\",\r\n\t},\r\n\tTextmessage: {\r\n\t\tcolor: \"white\",\r\n\t\talignSelf: \"flex-start\",\r\n\t\tfontSize: 15,\r\n\t},\r\n});\r\n\r\nexport default ExpandableListView;\r\n","import React from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, Image, FlatList } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectDialogMessages, setDialogMessages } from \"../redux/infoSlice\";\r\nimport { getNowTime } from \"../utils/commonUtil\";\r\n\r\nconst Options = ({ messageContent,  isOnLeft, messageType, sendJsonMessage, optionRefDec}) => {\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const dialogMessages = useSelector(selectDialogMessages);\r\n    \r\n\r\n    const sendOption = (item) => {\r\n        const [hour, min] = getNowTime();\r\n\t\tlet prefix = \"\";\r\n\t\tswitch (messageType) {\r\n\t\t\tcase \"option-START\":\r\n\t\t\t\tprefix = \"我在\"\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"option-END\":\r\n\t\t\t\tprefix= \"我要去\"\r\n\t\t\t\tbreak\r\n\t\t\tcase \"option-ask\":\r\n\t\t\t\tprefix=\"我的對面是\"\r\n\t\t\t\tbreak\r\n\t\t}\r\n        let message = item\r\n        let inputTextJson = {\r\n\t\t\t'author':\"user\",\r\n\t\t\t'message':message,\r\n\t\t\t'time':hour + ':' + min,\r\n\t\t\t'type':'text'\r\n\t\t}\r\n        dispatch(setDialogMessages(dialogMessages.concat(inputTextJson)))\r\n\r\n        message = prefix + message\r\n        inputTextJson = {\r\n\t\t\t'author':\"user\",\r\n\t\t\t'message':message,\r\n\t\t\t'time':hour + ':' + min,\r\n\t\t\t'type':'text'\r\n\t\t}\r\n        sendJsonMessage(inputTextJson)\r\n\t}\r\n\r\n    const renderItem = ({item,index}) =>{\r\n        return (\r\n            <TouchableOpacity onPress={()=>sendOption(item)} style={[styles.item]}>\r\n                <View>\r\n                    <View style={[styles.titleView]}>\r\n                        {messageType!=\"option-options\" ? <Image style={styles.tinyLogo} source={{uri:'https://appapi-tc.fg-retail.com.tw//Image/Upload/20210926/eee83edf-904a-471b-a421-4a37aa58cd52.jpg'}}/> : null}\r\n                        <Text style={styles.title} >{item}</Text>\r\n                    </View>\r\n                    {optionRefDec==undefined ? null : <Text style={styles.title}>{optionRefDec[index]}</Text>}\r\n                    \r\n                </View>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View\r\n            style={[\r\n                styles.container,\r\n                isOnLeft(\"messageContainer\"),\r\n            ]}\r\n        >\r\n            <FlatList\r\n                style={styles.flatli}\r\n                extraData={optionRefDec}\r\n                data={messageContent}\r\n                keyExtractor={item => item}\r\n                renderItem={(item,index)=>renderItem(item,index)}\r\n                horizontal={true}\r\n            />\r\n        </View>\r\n    )\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        width:\"100%\",\r\n    },\r\n    tinyLogo: {\r\n        width: 20,\r\n        height: 20,\r\n        margin:\"auto\",\r\n        marginVertical: 3,\r\n        marginHorizontal: 3,\r\n        overflow:\"hidden\",\r\n    },\r\n    flatli:{\r\n        backgroundColor:'white',\r\n    },\r\n    item: {\r\n        backgroundColor: '#48b8e8',\r\n        padding: 10,\r\n        borderRadius:15,\r\n        marginVertical: 10,\r\n        marginHorizontal: 6,\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    title:{\r\n\r\n        alignContent:\"center\",\r\n        alignSelf:\"center\",\r\n        justifyContent:\"center\",\r\n        fontSize:20\r\n    },\r\n    titleView:{\r\n        display:\"flex\",\r\n        flexDirection: \"row\",\r\n    }\r\n});\r\n\r\nexport default Options;\r\n","import { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectInstructionTexts } from '../redux/infoSlice';\r\n\r\n\r\nconst Start = ({isOnLeft, sendJsonMessage}) => {\r\n\r\n\tconst instructiontext = useSelector(selectInstructionTexts);\r\n\r\n    const sendStart = () => {\r\n\t\tif (Object.keys(instructiontext).length > 0) {\r\n\t\t\t// console.log('已經按過 START 了');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet inputTextJson = {\r\n\t\t\t'author':\"user\",\r\n\t\t\t'message':\"<:START:>\",\r\n\t\t\t'type':'text'\r\n\t\t}\r\n\t\tsendJsonMessage(inputTextJson);\r\n\t}\r\n\r\n    return (\r\n        <View style={[styles.container]}>\r\n            <View\r\n                style={[\r\n                    styles.messageContainer,\r\n                    isOnLeft(\"startmessageContainer\"),\r\n                ]}\r\n            >\r\n                <TouchableOpacity\r\n                    style={styles.rightIconButtonStyle}\r\n                    onPress={sendStart}\r\n                >\r\n                    <Text style={{color:\"white\"}}>\r\n                        START  \r\n                        <Icon name=\"play\" size={15} color=\"white\" />\r\n                    </Text>\r\n                    \r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tpaddingVertical: 10,\r\n\t\tmarginVertical: 5,\r\n\t},\r\n    messageContainer: {\r\n\t\tbackgroundColor: '#1D2671',\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n    rightIconButtonStyle: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingRight: 20,\r\n\t\tpaddingLeft: 5,\r\n\t},\r\n});\r\n \r\nexport default Start;","import React from \"react\";\r\nimport { View, Text, StyleSheet, Dimensions, TouchableOpacity } from \"react-native\";\r\nimport {\r\n\tPanGestureHandler,\r\n} from \"react-native-gesture-handler\";\r\nimport Animated, {\r\n\tuseAnimatedStyle,\r\n\tuseAnimatedGestureHandler,\r\n\tuseSharedValue,\r\n\twithTiming,\r\n\trunOnJS,\r\n} from \"react-native-reanimated\";\r\nimport { theme } from \"../styling/theme\";\r\n\r\nimport MessageBox from \"./Message.Normal\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport ExpandableListV from \"./Message.Expandable\";\r\nimport Options from \"./Message.Options\"\r\nimport * as Speech from 'expo-speech';\r\nimport Start from \"./Message.Start\";\r\n\r\n\r\nconst Message = ({ time, isLeft, message, messageType, floor, index,optionRefDec, setScrollState, sendJsonMessage}) => {\r\n\tconst x = useSharedValue(0);\r\n\tconst largerscale = useSharedValue(12);\r\n\r\n\r\n\tconst AIcon = Animated.createAnimatedComponent(Icon)\r\n\r\n\tconst SCREEN_WIDTH = Dimensions.get('window').width;\r\n\tconst TRANSLATE_X_THRESHOLD = - SCREEN_WIDTH *0.2;\r\n\r\n\tconst isOnLeft = (type) => {\r\n\t\tif (isLeft && type === \"messageContainer\") {\r\n\t\t\treturn {\r\n\t\t\t\talignSelf: \"flex-start\",\r\n\t\t\t\tbackgroundColor: \"#f0f0f0\",\r\n\t\t\t\tborderTopLeftRadius: 0,\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isLeft && type === \"startmessageContainer\"){\r\n\t\t\treturn {\r\n\t\t\t\talignSelf: \"flex-start\",\r\n\t\t\t\tbackgroundColor: \"#1B17E6\",\r\n\t\t\t\tborderTopLeftRadius: 0,\r\n\t\t\t};\r\n\t\t\r\n\t\t}\r\n\t\telse if ((isLeft && type === \"text\") || (isLeft && type ===\"instructiontext\")) {\r\n\t\t\treturn {\r\n\t\t\t\tcolor: \"#000\",\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if (isLeft && type === \"time\") {\r\n\t\t\treturn {\r\n\t\t\t\tcolor: \"darkgray\",\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn {\r\n\t\t\t\tborderTopRightRadius: 0,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\t\r\n\r\n\tconst NoralMsgeventHandler = useAnimatedGestureHandler({\r\n\t\tonActive: (event, ctx) => {\r\n\t\t\tif (isLeft && event.translationX<0){\r\n\t\t\t\tx.value = event.translationX;\r\n\t\t\t\tlargerscale.value =  event.translationX\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd: (event, ctx) => {\r\n\t\t\tconst shouldBeDismissed = x.value < TRANSLATE_X_THRESHOLD\r\n\t\t\tif (shouldBeDismissed){\r\n\t\t\t\t// runOnJS(Tts.speak)(message);\r\n\t\t\t\trunOnJS(Speech.speak)(message)\r\n\t\t\t}\r\n\t\t\tx.value = withTiming(0);\r\n\t\t\tlargerscale.value = withTiming(0)\r\n\t\t}\r\n\t});\r\n\r\n\r\n\r\n\tconst rIconStyle = useAnimatedStyle(()=>{\r\n\t\tconst opacity = withTiming(\r\n\t\t\tx.value < TRANSLATE_X_THRESHOLD ? 1 : 1\r\n\t\t);\r\n\t\treturn { opacity }\r\n\t})\r\n\r\n\r\n\r\n\tconst uas = useAnimatedStyle(() => {\r\n\t\treturn {\r\n\t\t\ttransform: [{ translateX: x.value }]\r\n\t\t}\r\n\t});\r\n\r\n\tconst enlarge = useAnimatedStyle(() => {\r\n\t\tconst fontSize = withTiming(\r\n\t\t\tlargerscale.value < TRANSLATE_X_THRESHOLD ? 20 : 12\r\n\t\t);\r\n\t\treturn { fontSize:fontSize }\r\n\t});\r\n\r\n\tswitch(messageType){\r\n\t\tcase 'state':\r\n\t\t\treturn (\r\n\t\t\t\t<Start \r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\r\n\t\tcase 'option-START':\r\n\t\t\treturn (\r\n\t\t\t\t<Options\r\n\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t\toptionRefDec={optionRefDec}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tcase 'option-END':\r\n\t\t\treturn (\r\n\t\t\t\t<Options\r\n\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t\toptionRefDec={optionRefDec}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tcase 'option-ASK':\r\n\t\t\treturn (\r\n\t\t\t\t<Options\r\n\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t\toptionRefDec={optionRefDec}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t\r\n\t\tcase 'option-options':\r\n\t\t\treturn (\r\n\t\t\t\t<Options\r\n\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tcase 'instructiontext':\r\n\t\t\treturn (\r\n\t\t\t\t<ExpandableListV\r\n\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\ttime={time}\r\n\t\t\t\t\tisLeft={isLeft}\r\n\t\t\t\t\tfloor={floor}\r\n\t\t\t\t\t// Tts={Tts}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tcase 'text':\r\n\t\t\treturn (\r\n\t\t\t\t\t<View style={[styles.container]}>\r\n\r\n\t\t\t\t\t\t<PanGestureHandler\r\n\t\t\t\t\t\t\tonGestureEvent={NoralMsgeventHandler}\r\n\t\t\t\t\t\t>\r\n\t\t\r\n\t\t\t\t\t\t\t<Animated.View style={uas}>\r\n\t\t\t\t\t\t\t\t<View\r\n\t\t\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\t\t\tstyles.messageContainer,\r\n\t\t\t\t\t\t\t\t\t\tisOnLeft(\"messageContainer\"),\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t<MessageBox\r\n\t\t\t\t\t\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\t\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\t\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\t\t\t\t\t\tisComplete={false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<View style={styles.timeView}>\r\n\t\t\t\t\t\t\t\t\t\t<Text style={[styles.time, isOnLeft(\"time\")]}>\r\n\t\t\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t\t<Animated.View style={[styles.iconContainer, rIconStyle]}>\r\n\t\t\t\t\t\t\t\t\t\t<AIcon\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"volume-up\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={theme.colors.description}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={[{left:30},enlarge]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<AIcon\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"long-arrow-left\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={theme.colors.description}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={[{left:30},enlarge]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Animated.View>\r\n\t\t\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t</Animated.View>\r\n\t\t\t\t\t\t</PanGestureHandler>\r\n\r\n\t\t\t\t\t</View>\r\n\t\t\t)\r\n\t\tcase 'image':\r\n\t\t\treturn (\r\n\t\t\t\t// empty view, this has been moved to ChatBot.ImageMap.jsx\r\n\t\t\t\t<View></View>\r\n\t\t\t);\r\n\r\n\t\t\t\r\n\r\n\t\t// \treturn (\r\n\t\t// \t\t<Animated.View style={[styles.container]}>\r\n\t\t// \t\t\t<View\r\n\t\t// \t\t\t\tstyle={[\r\n\t\t// \t\t\t\t\tstyles.messageContainer,\r\n\t\t// \t\t\t\t\tisOnLeft(\"messageContainer\"),\r\n\t\t// \t\t\t\t]}\r\n\t\t// \t\t\t>\r\n\t\t// \t\t\t\t<ImageBox\r\n\t\t// \t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t// \t\t\t\t\tmessageContent={message}\r\n\t\t// \t\t\t\t\tmessageType={messageType}\r\n\t\t// \t\t\t\t\tfloor={floor}\r\n\t\t// \t\t\t\t\tsetScrollState={setScrollState}\r\n\t\t// \t\t\t\t/>\r\n\t\t// \t\t\t\t<View style={styles.timeView}>\r\n\t\t// \t\t\t\t\t<Text style={[styles.time, isOnLeft(\"time\")]}>\r\n\t\t// \t\t\t\t\t\t{time}\r\n\t\t// \t\t\t\t\t</Text>\r\n\t\t// \t\t\t\t</View>\r\n\t\t// \t\t\t</View>\r\n\t\t// \t\t</Animated.View>\r\n\t\t// \t)\r\n\t}\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tpaddingVertical: 10,\r\n\t\tmarginVertical: 5,\r\n\t},\r\n\tmessageContainer: {\r\n\t\tbackgroundColor: '#1D2671',\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n\ttimeView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\ttime: {\r\n\t\tcolor: \"lightgray\",\r\n\t\tfontSize: 10,\r\n\t},\r\n\ticonContainer:{\r\n\t\tjustifyContent:'center',\r\n\t\talignItems:'center',\r\n\t\tfontSize:30,\r\n\t},\r\n});\r\n\r\nexport default Message;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Platform, ScrollView, KeyboardAvoidingView } from \"react-native\";\r\n// import Tts from 'react-native-tts';\r\nimport { theme } from \"../styling/theme\";\r\nimport Message from \"./Message.Main\";\r\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectDialogMessages, selectInstructions, setIndex } from \"../redux/infoSlice\";\r\nimport { selectFloorIndex, selectMapFloor, setFloorArray, setFloorIndex, setMapFloor } from \"../redux/mapSlice\";\r\n\r\n\r\n\r\nconst ChatMessagessList = ({ sendJsonMessage }) => {\r\n\tconst user = useRef(\"user\");\r\n\tconst scrollView = useRef();\r\n\tconst [scrollViewEnable, setScrollViewEnable] = useState(true);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst dialogMessages = useSelector(selectDialogMessages);\r\n\tconst instructions = useSelector(selectInstructions);\r\n\tconst mapFloor = useSelector(selectMapFloor);\r\n\tconst floorIndex = useSelector(selectFloorIndex);\r\n\tuseEffect(() => {\r\n\t\tlet newFloorArray = [];\r\n\t\tfor (var i=0, len=dialogMessages.length; i<len; ++i) {\r\n\t\t\tlet currentMessage = dialogMessages[i];\r\n\t\t\tif (currentMessage['type'] === 'image') {\r\n\t\t\t\tlet floorNumber = Number(currentMessage['floor']);\r\n\t\t\t\tnewFloorArray.push(floorNumber);\r\n\t\t\t\tif (mapFloor == -100) {\r\n\t\t\t\t\tdispatch(setMapFloor(floorNumber));\r\n\t\t\t\t\tdispatch(setIndex(0));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (newFloorArray.length > 0 && floorIndex == -1) {\r\n\t\t\t// 如果 FloorArray 開始有值，floorIndex 還在未定義的狀態: 表示剛開始要導航，這時強制設定floor index = 0\r\n\t\t\tdispatch(setFloorIndex(0));\r\n\t\t}\r\n\t\tdispatch(setFloorArray(newFloorArray)); \r\n    }, [instructions])\r\n\r\n\r\n\treturn (\r\n\t\t<ScrollView style={{ backgroundColor: theme.colors.white, flex: 1 }}\r\n\t\t\tref={scrollView}\r\n\t\t\tonContentSizeChange={() => {\r\n\t\t\t\tscrollView.current.scrollToEnd({ animated: true })\r\n\t\t\t}}\r\n\t\t\tscrollEnabled={scrollViewEnable}\r\n\t\t\t// onTouchEnd={() => { setScrollViewEnable(true) }}\r\n\t\t\t// onTouchStart={(event) => {\r\n\t\t\t// \tif (event.nativeEvent.locationY < 600) setScrollViewEnable(false);\r\n\r\n\t\t\t// }}\r\n\t\t>\r\n\t\t\t<KeyboardAvoidingView\r\n                behavior={Platform && Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n                style={{flex:1}}\r\n              >\r\n\t\t\t\t<GestureHandlerRootView>\r\n\t\t\t\t{dialogMessages.map((message, index) => \r\n\t\t\t\t\t(message.author != undefined) ?\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\ttime={message.time}\r\n\t\t\t\t\t\t\tisLeft={message.author !== user.current}\r\n\t\t\t\t\t\t\tmessage={message.message}\r\n\t\t\t\t\t\t\tmessageType={message.type}\r\n\t\t\t\t\t\t\tfloor={message.floor}\r\n\t\t\t\t\t\t\tindex = {message.index}\r\n\t\t\t\t\t\t\toptionRefDec = {message.optionRefDec}\r\n\t\t\t\t\t\t\tsetScrollState = {setScrollViewEnable}\r\n\t\t\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t\t\t/> : null\r\n\t\t\t\t)}\r\n\t\t\t\t</GestureHandlerRootView>\r\n\t\t\t</KeyboardAvoidingView>\r\n\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nexport default ChatMessagessList;","import { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, StatusBar, Platform, SafeAreaView  } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectDialogMessages, selectInstructions, selectInstructionTexts, setDialogMessages, setInstructions, setInstructionTexts } from '../redux/infoSlice';\r\nimport useWebSocket, { ReadyState } from 'react-native-use-websocket';\r\nimport ChatHeader from '../components/ChatBot.Header';\r\nimport ChatImageMap from '../components/ChatBot.ImageMap';\r\nimport ChatInput from '../components/ChatBot.InputBox';\r\nimport ChatMessagessList from '../components/ChatBot.MessageList';\r\nimport { DOMAIN_NAME, PORT_WS } from '../utils/commonUtil';\r\n\r\n// websocket url: (local)  ws://10.0.2.2:8000/ws/bots/       ws://127.0.0.1:8000/ws/bots/\r\n// websocket url: (remote) ws://61.219.68.130:808/websocket\r\n\r\n\r\nconst ChatBotScreen = ({navigation}) => {\r\n    const [botname, setBotName] = useState(\"Indoor Navigation\");\r\n\r\n    // use ws: if you test on android Emulator\r\n    let ws_scheme = 'wss:';\r\n    const [socketUrl, setSocketUrl] = useState(`${ws_scheme}//${DOMAIN_NAME}:${PORT_WS}/websocket`);\r\n    const [onlinestatus, setOnlineStatus] = useState(false);\r\n\r\n    // redux\r\n    const dispatch =  useDispatch();\r\n    const instructions = useSelector(selectInstructions);\r\n    const instructiontext = useSelector(selectInstructionTexts);\r\n    const dialogMessages = useSelector(selectDialogMessages);\r\n\r\n    // websocket\r\n    const { sendJsonMessage, lastJsonMessage, readyState } = useWebSocket(socketUrl, {\r\n        onOpen: () => {\r\n            console.log('connected');\r\n            setOnlineStatus(true);\r\n        },\r\n        onError: (err) => {\r\n            console.log(\"[CHATBOTIASL][ERROR][WEBSOCKET]:\", err);\r\n        },\r\n        shouldReconnect: (closeEvent) => true,\r\n        reconnectAttempts: 30,\r\n        reconnectInterval: 3000,\r\n    });\r\n      \r\n    const connectionStatus = {\r\n        [ReadyState.CONNECTING]: \"Connecting\",\r\n        [ReadyState.OPEN]: \"Open\",\r\n        [ReadyState.CLOSING]: \"Closing\",\r\n        [ReadyState.CLOSED]: \"Closed\",\r\n        [ReadyState.UNINSTANTIATED]: \"Uninstantiated\",\r\n    }[readyState];\r\n\r\n    //connectionStatus change UI\r\n    useEffect(()=> {\r\n        setOnlineStatus(connectionStatus === 'Open');\r\n    }, [connectionStatus]);\r\n    \r\n    //onmessage\r\n    useEffect(() => {\r\n        if (Platform.OS != 'web') {\r\n            console.log('message : ',lastJsonMessage);\r\n        }\r\n\r\n        if (lastJsonMessage !== null && lastJsonMessage !== {}) {\r\n            if (lastJsonMessage.instructions !== undefined) {\r\n                try {\r\n                    let newDict = {...instructions, ...lastJsonMessage.instructions};\r\n                    dispatch(setInstructions(newDict));\r\n                }\r\n                catch{}\r\n\r\n                if (lastJsonMessage.type === 'instructiontext') {\r\n                    let newDict2 = JSON.parse(JSON.stringify(instructiontext));\r\n                    newDict2[lastJsonMessage.floor] = lastJsonMessage.message[0];\r\n                    dispatch(setInstructionTexts(newDict2));\r\n                }\r\n            }\r\n\r\n            dispatch(setDialogMessages(dialogMessages.concat(lastJsonMessage)));\r\n        }\r\n    }, [lastJsonMessage]);\r\n\r\n    useEffect(() => {\r\n        console.log('Your platform :', Platform.OS);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <SafeAreaView style={styles.crossPlatformContainer}>\r\n            <StatusBar backgroundColor=\"#b3e6ff\" barStyle=\"dark-content\" />\r\n            <ChatHeader\r\n                botname={botname}\r\n                locationName={\"遠雄廣場\"}\r\n                onlineStatus={onlinestatus} \r\n                sendJsonMessage={sendJsonMessage}\r\n            />\r\n            <ChatImageMap />\r\n            <ChatMessagessList\r\n                sendJsonMessage={sendJsonMessage}\r\n            />\r\n            <ChatInput\r\n                online={onlinestatus}\r\n                sendJsonMessage={sendJsonMessage}\r\n            />\r\n        </SafeAreaView>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    crossPlatformContainer: {\r\n        flex: 1,\r\n        paddingTop: Platform.OS === 'android' ? 0 : 0\r\n    },\r\n});\r\n \r\nexport default ChatBotScreen;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { StyleSheet, View, Button, ImageBackground, Text, TouchableOpacity, Platform, SafeAreaView } from 'react-native';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport ReactNativeZoomableView from '@openspacelabs/react-native-zoomable-view/src/ReactNativeZoomableView';\r\nimport Svg ,{ Defs, Marker, Path, Circle } from 'react-native-svg';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Modal from \"react-native-modal\";\r\nimport { selectInstructions, selectInstructionTexts, selectIndex, setIndex, setDialogMessages, setInstructionTexts } from '../redux/infoSlice';\r\nimport { selectMapFloor, selectFloorArray, selectFloorIndex, setFloorIndex, setMapFloor, setFloorArray } from '../redux/mapSlice';\r\nimport { \r\n    calcAngleDegrees, \r\n    changePath, \r\n    computeVector, \r\n    getNowTime, \r\n    getPathCoordinates, \r\n    DOMAIN_NAME, \r\n    HTTP_SCHEME, \r\n    PORT_django, \r\n    rotatePoint, \r\n    rotateRelativeToCenter \r\n} from '../utils/commonUtil';\r\n\r\n\r\nconst MapNavigationScreen = ({route, navigation}) => {\r\n\r\n    const { sendJsonMessage } = route.params;\r\n\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const instructions = useSelector(selectInstructions);\r\n    const mapFloor = useSelector(selectMapFloor);\r\n\r\n    const instructiontext = useSelector(selectInstructionTexts);\r\n    const infoIndex = useSelector(selectIndex);\r\n    const floorArray = useSelector(selectFloorArray);\r\n    const floorIndex = useSelector(selectFloorIndex);\r\n\r\n    const getNextStepIndices = (shift, curFloorIndex, curInfoIndex) => {\r\n        if (shift < 0) {\r\n            if (curInfoIndex == 0 && curFloorIndex == 0) {\r\n                return {\r\n                    flag: false,\r\n                    result: []\r\n                };\r\n            }\r\n\r\n            if (curInfoIndex != 0) {\r\n                return {\r\n                    flag: true,\r\n                    result: [\r\n                        {index: curInfoIndex - 1}\r\n                    ]\r\n                }\r\n            }\r\n            else {\r\n                let instructArray = instructiontext[floorArray[curFloorIndex-1]][\"subCategory\"];\r\n                return {\r\n                    flag: true,\r\n                    result: [\r\n                        {floor: curFloorIndex - 1},\r\n                        {index: instructArray.length - 1}\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            let instructArray = instructiontext[floorArray[curFloorIndex]][\"subCategory\"];\r\n            if (curFloorIndex == floorArray.length - 1 && curInfoIndex == instructArray.length - 1) {\r\n                return {\r\n                    flag: false,\r\n                    result: []\r\n                };\r\n            }\r\n\r\n            if (curInfoIndex < instructArray.length - 1) {\r\n                return {\r\n                    flag: true,\r\n                    result:[\r\n                        {index: curInfoIndex + 1}\r\n                    ]\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    flag: true,\r\n                    result: [\r\n                        {index: 0},\r\n                        {floor: curFloorIndex + 1}\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n    };\r\n\r\n    const ifGuideStart = () => {\r\n        // console.log('instructiontext !== {}: ,', instructiontext !== {});\r\n        // console.log('floorArray != []: ,', floorArray != []);\r\n\r\n        return floorArray.length > 0 && infoIndex !== -1;\r\n    };\r\n\r\n    const getFutureInstructionText = (currentFloorIndex, currentInfoIndex) => {\r\n        if (!ifGuideStart()) {\r\n            return \"\";\r\n        }\r\n\r\n        const future = getNextStepIndices(1, currentFloorIndex, currentInfoIndex);\r\n        if (!future.flag) {\r\n            return \"(已完成)\";\r\n        }\r\n        else {\r\n            let notyet_floorIndex = currentFloorIndex;\r\n            let notyet_index = currentInfoIndex;\r\n            future.result.forEach((obj) => {\r\n                if (obj.index !== undefined) {\r\n                    notyet_index = obj.index;\r\n                }\r\n                else {\r\n                    notyet_floorIndex = obj.floor;\r\n                }\r\n            });\r\n            return instructiontext[floorArray[notyet_floorIndex]][\"subCategory\"][notyet_index][\"name\"];\r\n        }\r\n    };\r\n\r\n    const [nextInstructionText, setNextInstructionText] = useState(getFutureInstructionText(floorIndex, infoIndex));\r\n\r\n    const goNextStep = (shift) => {\r\n\r\n        const res = getNextStepIndices(shift, floorIndex, infoIndex);\r\n        if (!res.flag) {\r\n            if (shift > 0) {\r\n                // 詢問是否結束導航\r\n                setModalContent(\"你已完成導航路徑，確定要結束嗎?\");\r\n                setIsModalVisible(true);\r\n\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            let newFloorIndex = floorIndex;\r\n            let newIndex = infoIndex;\r\n\r\n            res.result.forEach((obj) => {\r\n                if (obj.index !== undefined) {\r\n                    newIndex = obj.index;\r\n                    dispatch(setIndex(obj.index));\r\n                }\r\n                else {\r\n                    newFloorIndex = obj.floor;\r\n                    dispatch(setFloorIndex(obj.floor));\r\n                    dispatch(setMapFloor(floorArray[obj.floor]));\r\n                }\r\n            });\r\n\r\n            setNextInstructionText(getFutureInstructionText(newFloorIndex, newIndex));\r\n        }\r\n    };\r\n\r\n    // svg\r\n    const [imageURL, setImageURL] = useState(`${HTTP_SCHEME}://${DOMAIN_NAME}:${PORT_django}/static/image/03.jpeg`)\r\n\r\n    const img_width = 1024;\r\n    const img_height = 557;\r\n\r\n    const ratio_img_to_svg = 2.5;\r\n    var svg_width = img_width / ratio_img_to_svg;   // 409.6\r\n    var svg_height = img_height / ratio_img_to_svg; // 222.8\r\n    var viewBoxProps = \"0 0 1024 557\"; // equal to original image's size\r\n\r\n    const [svgPath, setSvgPath] = useState('M 0 0 L 0 0');\r\n\r\n    // ZoomableView centering\r\n    const zoomableViewRef = useRef();\r\n    const initialZoomValue = 4;\r\n    let zoomVal = useRef(initialZoomValue);\r\n    // coordinate of imageCenter, when image center coincides with 畫面 center\r\n    const imageCenter = { x: 0.5*img_width, y: 0.5*img_height };\r\n    const initialBasePoint = {x: 0.5*img_width, y: 0.5*img_height + 160*ratio_img_to_svg/initialZoomValue};\r\n    let basePoint = useRef(initialBasePoint);\r\n    const [angle, setAngle] = useState(0);\r\n\r\n    const scale_to_canvas = (vector) => {\r\n        return [initialZoomValue*(vector.x/ratio_img_to_svg), initialZoomValue*(vector.y/ratio_img_to_svg)];\r\n    };\r\n\r\n    const distance_center_target = (goal) => {\r\n\r\n        const deltaVector = computeVector(imageCenter, goal);\r\n        return scale_to_canvas(deltaVector);\r\n    };\r\n\r\n    let targetPoint = {x: 0, y: 0};\r\n    let [previousMove, setPreviousMove] = useState({x:0, y:0});\r\n    // for base point guide\r\n    let previousAutoTotalMove = useRef({x: 0, y: 0});\r\n    let previousTransformTotalMove = useRef({x: 0, y: 0});\r\n\r\n    const updateBasePoint = (rotation_angle) => {\r\n        const delta_rotation_angle = rotation_angle - angle;\r\n        //console.log(`basePoint 原先為 (${basePoint.current.x}, ${basePoint.current.y})`);\r\n\r\n        let newPoint = rotateRelativeToCenter(basePoint.current, imageCenter, -delta_rotation_angle);\r\n        basePoint.current = {x: newPoint.x, y: newPoint.y};\r\n\r\n        //console.log(`basePoint 更新為 (${basePoint.current.x}, ${basePoint.current.y})`);\r\n    };\r\n\r\n    /** (依圖片中心)順時針轉 ? 度 */ \r\n    const doRotation = (rotation_angle) => {\r\n        // 原本轉角 = angle，現在要更新為 rotation_angle\r\n        setAngle(rotation_angle);\r\n\r\n        // update basePoint coordinate\r\n        updateBasePoint(rotation_angle);\r\n    };\r\n\r\n    const rotateLineToVertical = (point1, point2) => {\r\n        let d = calcAngleDegrees(point2.x-point1.x, point2.y-point1.y);\r\n        let needToRotate = -(d + 90); // 順時針轉 ? relative to unrotate state\r\n\r\n        //console.log('箭頭角度 = ', d, '度, 所以，新的順時鐘轉角 = ', needToRotate, '度');\r\n        doRotation(needToRotate);\r\n\r\n        return needToRotate;\r\n    };\r\n\r\n    const zoomCenteringGuide = (pathPoints) => {\r\n        targetPoint = pathPoints[infoIndex];\r\n        // console.log(\"new point coordinate: \", targetPoint.x, targetPoint.y);\r\n        // console.log(\"previous_move: \", previousMove.x, previousMove.y);\r\n\r\n        // before move, move to original state first!\r\n        zoomableViewRef.current.moveBy(-previousMove.x, -previousMove.y);\r\n        const [disX, disY] = distance_center_target(targetPoint);\r\n        zoomableViewRef.current.moveBy(disX, disY);\r\n        setPreviousMove({x: disX, y: disY});\r\n    };\r\n\r\n    const calibraToOriginalTargetPoint = () => {\r\n        basePointGuide(undefined, true);\r\n    };\r\n\r\n    const basePointGuide_Going = (nowPathPoints) => {\r\n\r\n        let updatedAngle = rotateLineToVertical(nowPathPoints[infoIndex], nowPathPoints[infoIndex+1]);\r\n        let disVector = computeVector(basePoint.current, nowPathPoints[infoIndex]);\r\n        let rotDicVector = rotatePoint(disVector, updatedAngle);\r\n        const [disX, disY] = scale_to_canvas(rotDicVector);\r\n        zoomableViewRef.current.moveBy(disX, disY);\r\n\r\n        // consequence of auto move:\r\n        targetPoint = nowPathPoints[infoIndex];\r\n        basePoint.current = {x: targetPoint.x, y: targetPoint.y};\r\n        previousAutoTotalMove.current = {x: previousAutoTotalMove.current.x + disX, y: previousAutoTotalMove.current.y + disY};\r\n        // 同步: Transform move(by Hand) = Auto Move 等於沒有手移動了\r\n        previousTransformTotalMove.current = previousAutoTotalMove.current;\r\n    };\r\n\r\n    const basePointGuide = (nowPathPoints, calibraOnly) => {\r\n\r\n        if (calibraOnly === false) {\r\n            if (infoIndex == nowPathPoints.length -1) {\r\n                console.log(\"到最後一點了\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 先旋轉，再平移 image。 (若一開始位置偏移，就要先校正)\r\n        if (zoomVal.current !== initialZoomValue) {\r\n            // zoomTo() need some time to excute\r\n            zoomableViewRef.current.zoomTo(initialZoomValue);\r\n\r\n            setTimeout(() => {\r\n                const calibraVector = {\r\n                    x: -(previousTransformTotalMove.current.x - previousAutoTotalMove.current.x), \r\n                    y: -(previousTransformTotalMove.current.y - previousAutoTotalMove.current.y)\r\n                };\r\n                zoomableViewRef.current.moveBy(calibraVector.x, calibraVector.y);\r\n                zoomVal.current = initialZoomValue;\r\n\r\n                // Hand move = Auto Move 等於沒有手移動了\r\n                previousTransformTotalMove.current = previousAutoTotalMove.current;\r\n\r\n                if (calibraOnly === false) {\r\n                    basePointGuide_Going(nowPathPoints);\r\n                }\r\n            }, 1200);\r\n        }\r\n        else if (previousTransformTotalMove.current !== previousAutoTotalMove.current) {\r\n            const calibraVector = {\r\n                x: -(previousTransformTotalMove.current.x - previousAutoTotalMove.current.x), \r\n                y: -(previousTransformTotalMove.current.y - previousAutoTotalMove.current.y)\r\n            };\r\n            // 校正時，不須紀錄autoMove\r\n            zoomableViewRef.current.moveBy(calibraVector.x, calibraVector.y);\r\n    \r\n            // 同步: Transform move(by Hand) = Auto Move 等於沒有手移動了\r\n            previousTransformTotalMove.current = previousAutoTotalMove.current;\r\n\r\n            if (calibraOnly === false) {\r\n                basePointGuide_Going(nowPathPoints);\r\n            }\r\n        }\r\n        else {\r\n            if (calibraOnly === false) {\r\n                basePointGuide_Going(nowPathPoints);\r\n            }\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if (mapFloor > -100 && infoIndex >= 0) {\r\n            let tmpInstructions = instructions[mapFloor.toString()];\r\n            let currentPathPoints = getPathCoordinates(tmpInstructions);\r\n            if (infoIndex > 0) {\r\n                tmpInstructions = tmpInstructions.slice(infoIndex);\r\n            }\r\n\r\n            setSvgPath(changePath(tmpInstructions));\r\n            setImageURL(`${HTTP_SCHEME}://${DOMAIN_NAME}:${PORT_django}/static/image/0${mapFloor}.jpeg`);\r\n\r\n\r\n            // display strategy 1\r\n            //zoomCenteringGuide(currentPathPoints);\r\n\r\n            // display strategy 2\r\n            basePointGuide(currentPathPoints, false);\r\n        }\r\n        else {\r\n            // default image before indoor guide\r\n            setSvgPath('M 0 0 L 0 0');\r\n            setImageURL(`${HTTP_SCHEME}://${DOMAIN_NAME}:${PORT_django}/static/image/iFG-cover.jpg`);\r\n        }\r\n    }, [mapFloor, infoIndex]);\r\n\r\n    // modal: use for check\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [modalContent, setModalContent] = useState(\"你已完成導航路徑，確定要結束嗎?\");\r\n    const handleModalCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const handleModal2 = () => {\r\n        setModalContent(\"你還未到達目的地，確定要結束嗎?\");\r\n        setIsModalVisible(true);\r\n    };\r\n    const handleFinish = () => {\r\n        setIsModalVisible(false);\r\n\r\n        navigation.navigate('ChatBot');\r\n\r\n        const [hour, min] = getNowTime();\r\n        sendJsonMessage({\r\n            'author': \"user\",\r\n\t\t\t'type':'text',\r\n\t\t\t'message': '/done',\r\n\t\t\t'time': hour + ':' + min,\r\n        });\r\n        dispatch(setDialogMessages([]));\r\n\t\tdispatch(setInstructionTexts({}));\r\n        dispatch(setMapFloor(-100));\r\n        dispatch(setFloorArray([]));\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={styles.crossPlatformContainer}>\r\n\r\n            <View style={styles.headerContainer}>\r\n                <Button style={styles.goBackView} title=\"回到對話模式\" onPress={() => navigation.goBack()} />\r\n                <TouchableOpacity style={styles.calibrationButtonViewStyle} onPress={() => calibraToOriginalTargetPoint()}>\r\n                    <Text style={styles.calibrationButtonTextStyle}>\r\n                        定位回導航點\r\n                        <MaterialCommunityIcons name=\"crosshairs-gps\" color=\"black\" size={25} />\r\n                    </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.stopButtonViewStyle} onPress={() => handleModal2()}>\r\n                    <Text style={styles.calibrationButtonTextStyle}>\r\n                        結束\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={styles.bodyContainer}>\r\n                <ReactNativeZoomableView\r\n                    maxZoom={10} \r\n                    minZoom={1} \r\n                    zoomStep={0.5} \r\n                    initialZoom={initialZoomValue} \r\n                    bindToBorders={false} \r\n                    //onLongPress = {(event, gestureState) => console.log(gestureState)}\r\n                    \r\n                    // 觀念: image 在任何位置，旋轉角度均不會改變 zoomableViewEventObject的offsetX、offsetY\r\n                    // onShiftingEnd = {(event, gestureState, zoomableViewEventObject) => {\r\n                    //     // console.log(zoomableViewEventObject);\r\n                    //     previousHandTotalMove.current = {x: -zoomableViewEventObject.offsetX*zoomVal.current, y: -zoomableViewEventObject.offsetY*zoomVal.current};\r\n                    // }}\r\n                    // onZoomEnd = {(event, gestureState, zoomableViewEventObject) => {\r\n                    //     zoomVal.current = zoomableViewEventObject.zoomLevel;\r\n                    // }}\r\n                    onTransform = {(zoomableViewEventObject) => {\r\n                        // two possibility: by guesture or by program\r\n                        // console.log('onTransform called', zoomableViewEventObject);\r\n                        zoomVal.current = zoomableViewEventObject.zoomLevel;\r\n                        previousTransformTotalMove.current = {x: -zoomableViewEventObject.offsetX*zoomableViewEventObject.zoomLevel, y: -zoomableViewEventObject.offsetY*zoomableViewEventObject.zoomLevel}\r\n                    }}\r\n                    ref={zoomableViewRef}>\r\n\r\n                    <ImageBackground\r\n                        source={{ uri: imageURL }} \r\n                        style={[\r\n                            styles.bgImageStyle, \r\n                            {\r\n                                width: svg_width, \r\n                                height: svg_height, \r\n                                transform: [{ rotate: `${angle}deg` }, {translateX: 0}]\r\n                            }\r\n                        ]}\r\n                    >\r\n\r\n                        <Svg width={svg_width} height={svg_height} viewBox={viewBoxProps}>\r\n                            <Defs>\r\n                                <Marker\r\n                                    id=\"MapModeTriangle\"\r\n                                    viewBox=\"0 0 10 10\"\r\n                                    refX=\"0\"\r\n                                    refY=\"5\"\r\n                                    markerUnits=\"strokeWidth\"\r\n                                    markerWidth=\"3\"\r\n                                    markerHeight=\"3\"\r\n                                    orient=\"auto\"\r\n                                >\r\n                                    <Path\r\n                                        d=\"M 0 0 L 10 5 L 0 10 z\" \r\n                                        fill=\"black\"\r\n                                        stroke=\"red\"\r\n                                        strokeWidth=\"1\"\r\n                                    />\r\n                                </Marker>\r\n                                <Marker\r\n                                    id=\"MapModestartPoint\"\r\n                                    viewBox=\"0 0 10 10\"\r\n                                    refX=\"5\"\r\n                                    refY=\"5\"\r\n                                    markerUnits=\"strokeWidth\"\r\n                                    markerWidth=\"3\"\r\n                                    markerHeight=\"3\"\r\n                                    orient=\"auto\"\r\n                                >\r\n                                        <Circle \r\n                                            cx=\"5\" \r\n                                            cy=\"5\" \r\n                                            r=\"8\" \r\n                                            fill=\"green\"\r\n                                        />\r\n                                </Marker>\r\n                                <Marker\r\n                                    id=\"MapModemidPoint\"\r\n                                    viewBox=\"0 0 10 10\"\r\n                                    refX=\"5\"\r\n                                    refY=\"5\"\r\n                                    markerUnits=\"strokeWidth\"\r\n                                    markerWidth=\"2\"\r\n                                    markerHeight=\"2\"\r\n                                    orient=\"auto\"\r\n                                >\r\n                                    <Circle cx=\"5\" cy=\"5\" r=\"8\" fill=\"grey\"/>\r\n                                </Marker>\r\n                            </Defs>\r\n\r\n                            <Path\r\n                                d={svgPath}\r\n                                // d=\"M 0 0 L 10 5 L 0 10 z\"\r\n                                fill=\"none\"\r\n                                stroke=\"#ff3333\"\r\n                                strokeWidth=\"5\"\r\n                                markerStart=\"url(#MapModestartPoint)\"\r\n                                markerMid=\"url(#MapModemidPoint)\"\r\n                                markerEnd=\"url(#MapModeTriangle)\"\r\n                            />\r\n                        </Svg>\r\n\r\n                    </ImageBackground>\r\n\r\n                </ReactNativeZoomableView>\r\n            </View>\r\n            \r\n            {\r\n                ifGuideStart() ?\r\n                <View style={styles.bottomContainer}>\r\n                    <View style={styles.guideContainer}>\r\n                        <Text style={styles.mainTextStyle}>\r\n                            {instructiontext[floorArray[floorIndex]][\"subCategory\"][infoIndex][\"name\"]}\r\n                        </Text>\r\n                    </View>\r\n\r\n                    <View style={[styles.multiColumnContaner ]}>\r\n                        <View style={styles.subKeywordViewContainer}>\r\n                            <Text style={styles.subKeywordStyle}>接下來</Text>\r\n                        </View>\r\n                        <View style={styles.subTextViewContainer}>\r\n                            <Text style={styles.subTextStyle}>{nextInstructionText}</Text>\r\n                        </View>\r\n                    </View>\r\n\r\n                    <View style={styles.multiColumnContaner}>\r\n                        <TouchableOpacity style={[styles.paginationButtonContainer, {borderRightColor: \"white\", borderRightWidth: 0.5}]} onPress={() => goNextStep(-1)}>\r\n                            <Text style={styles.buttonTextStyle}>上一步</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style={[styles.paginationButtonContainer, {borderLeftColor: \"white\", borderLeftWidth: 0.5}]} onPress={() => goNextStep(1)}>\r\n                            <Text style={styles.buttonTextStyle}>下一步</Text>\r\n                        </TouchableOpacity>\r\n\r\n                    </View>\r\n                </View>\r\n                : <View style={styles.bottomContainer}></View>\r\n            }\r\n\r\n\r\n            <Modal isVisible={isModalVisible}>\r\n                <View style={styles.modalViewContainer}>\r\n                    <Text style={styles.modalTextStyle}>{modalContent}</Text>\r\n                    <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n                        <TouchableOpacity onPress={handleFinish}>\r\n                            <Text style={styles.modalYesButtonStyle}>是</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity onPress={handleModalCancel}>\r\n                            <Text style={styles.modalNoButtonStyle}>否</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </SafeAreaView>\r\n\r\n        \r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    crossPlatformContainer: {\r\n        flex: 1,\r\n        paddingTop: Platform.OS === 'android' ? 0 : 0\r\n    },\r\n    headerContainer: {\r\n        alignSelf: 'stretch',\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    bodyContainer: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#EAF0F2\"\r\n    },\r\n    bottomContainer: {\r\n        marginHorizontal: 0,\r\n        backgroundColor: \"red\"\r\n    },\r\n    goBackBotton: {\r\n        flexGrow: 1\r\n    },\r\n    calibrationButtonViewStyle: {\r\n        backgroundColor: \"white\",\r\n        flexGrow: 1\r\n    },\r\n    calibrationButtonTextStyle:{\r\n        color: \"black\",\r\n        textAlign: \"center\",\r\n    },\r\n    stopButtonViewStyle: {\r\n        backgroundColor: \"#e6658c\",\r\n        flexGrow: 1,\r\n        justifyContent: 'center'\r\n    },\r\n    bgImageStyle: {\r\n\t\talignSelf: \"center\",\r\n\t},\r\n\r\n    guideContainer: {\r\n        backgroundColor: '#198039',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 15,\r\n    },\r\n    mainTextStyle: {\r\n        color: \"white\",\r\n        fontSize: 18,\r\n        fontWeight: \"500\",\r\n    },\r\n    multiColumnContaner: {\r\n        flexDirection:'row',\r\n        justifyContent: \"space-between\",\r\n    },\r\n    subKeywordViewContainer: {\r\n        width: 86,\r\n        backgroundColor: \"#eff2d7\",\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 15,\r\n        justifyContent: 'center',\r\n    },\r\n    subKeywordStyle: {\r\n        textAlign: \"center\",\r\n        fontSize: 16,\r\n    },\r\n    subTextViewContainer: {\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 10,\r\n        backgroundColor: \"#d7f3da\",\r\n        flexGrow: 1,\r\n        flexShrink: 1,\r\n    },\r\n    subTextStyle: {\r\n        fontSize: 15,\r\n        textAlign: \"center\",\r\n    },\r\n    paginationButtonContainer: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#0d662e\",\r\n    },\r\n    buttonTextStyle: {\r\n        paddingVertical: 10,\r\n        textAlign: \"center\",\r\n        fontSize: 14,\r\n        color: \"white\",\r\n        fontWeight: \"500\",\r\n    },\r\n\r\n    modalViewContainer: {\r\n        justifyContent: \"space-between\",\r\n\r\n        backgroundColor: \"white\", \r\n        height: 120, \r\n        borderRadius: 10,\r\n        padding: 15\r\n    },\r\n    modalTextStyle: {\r\n        fontSize: 20,\r\n        textAlign: \"center\",\r\n    },\r\n    modalYesButtonStyle: {\r\n        color: \"#4584fc\",\r\n        paddingHorizontal: 18,\r\n        fontSize: 16,\r\n    },\r\n    modalNoButtonStyle: {\r\n        color: \"#858585\",\r\n        paddingHorizontal: 18,\r\n        fontSize: 16,\r\n    },\r\n})\r\n\r\n\r\nexport default MapNavigationScreen;","import { createStackNavigator  } from '@react-navigation/stack';\r\nimport ChatBotScreen from '../screens/ChatBotScreen';\r\nimport MapNavigationScreen from '../screens/MapNavigationScreen';\r\n\r\n\r\n\r\n// reference: https://reactnavigation.org/docs/stack-navigator/\r\n\r\n// define navigation API\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function MyStack() {\r\n    return (\r\n        <Stack.Navigator \r\n            initialRouteName=\"ChatBot\"\r\n            screenOptions={({ route, navigation }) => ({\r\n                headerShown: false,\r\n                gestureEnabled: true,\r\n          })}\r\n        >\r\n            <Stack.Screen name=\"ChatBot\" component={ChatBotScreen} />\r\n            <Stack.Screen name=\"MapNavigation\" component={MapNavigationScreen} />\r\n        </Stack.Navigator>\r\n    );\r\n}","import { registerRootComponent } from 'expo';\r\nimport { AppRegistry } from 'react-native';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nimport {name as appName} from './app.json';\r\n\r\nregisterRootComponent(App);\r\n","import { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport MyStack from './routes/MyStack';\r\n\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <NavigationContainer>\r\n        <MyStack />\r\n      </NavigationContainer>\r\n    </Provider>\r\n  );\r\n}\r\n"],"sourceRoot":""}