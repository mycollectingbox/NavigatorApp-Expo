{"version":3,"sources":["redux/infoSlice.js","redux/mapSlice.js","store.js","styling/theme.js","components/Header.OnlineStatus.jsx","components/ChatBot.Header.jsx","utils/commonUtil.js","components/ChatBot.ImageMap.jsx","components/Modal.WebSpeech.jsx","components/ChatBot.InputBox.jsx","components/Message.Normal.jsx","components/Message.InnerBox.jsx","components/Message.Expandable.jsx","components/Message.Options.jsx","components/Message.Start.jsx","components/Message.Main.jsx","components/ChatBot.MessageList.jsx","screens/ChatBotScreen.jsx","screens/MapNavigationScreen.jsx","routes/MyStack.js","index.js","App.js"],"names":["infoSlice","createSlice","name","initialState","instructions","instructionTexts","floor","index","reply","message","dialogMessages","reducers","setInstructions","state","action","payload","setInstructionTexts","setIndex","setReply","setMessage","setFloor","setDialogMessages","actions","selectInstructions","info","selectInstructionTexts","selectIndex","selectDialogMessages","mapSlice","mapFloor","floorArray","floorIndex","setMapFloor","console","log","setFloorArray","length","setFloorIndex","selectMapFloor","map","selectFloorArray","selectFloorIndex","store","configureStore","reducer","infoReducer","mapReducer","theme","primary","white","black","searchIcon","searchText","searchBackground","title","subTitle","storyBorder","description","inputBackground","inputText","messageBackground","danger","success","light","halfOpacitySecondary","halfOpacityPrimary","styles","StyleSheet","create","onlineStatusContainer","flexDirection","paddingHorizontal","onlineStatus","color","fontSize","statusImage","height","width","borderRadius","alignSelf","margin","OnlineStatus","View","style","Text","Image","source","uri","LogBox","ignoreLogs","container","backgroundColor","paddingTop","paddingBottom","backButton","profileOptions","flex","justifyContent","alignItems","profile","borderColor","image","usernameAndOnlineStatus","usernameAndLocationName","username","fontWeight","locationName","options","paddingVertical","mapButton","ChatHeader","botname","sendJsonMessage","navigation","useNavigation","LinearGradient","colors","TouchableOpacity","size","onPress","navigate","DOMAIN_NAME","getNowTime","today","Date","hour","getHours","min","getMinutes","toString","changePath","tmpInstructions","path","forEach","ins","error","computeVector","p1","p2","x","y","calcAngleDegrees","Math","atan2","PI","rotatePoint","point","angleInDegree","angleInRadian","cos","sin","borderBottomWidth","messageView","maxWidth","Imagemessage","ChatImageMap","useState","HTTP_SCHEME","imageURL","setImageURL","svgPath","setSvgPath","useSelector","useEffect","slice","ReactNativeZoomableView","maxZoom","minZoom","zoomStep","initialZoom","bindToBorders","ImageBackground","viewBox","id","refX","refY","markerUnits","markerWidth","markerHeight","orient","d","fill","stroke","strokeWidth","cx","cy","r","markerStart","markerMid","markerEnd","modalContainer","modalHeader","marginBottom","modalPromptTextStyle","marginLeft","marginRight","modalButtonStyle","borderWidth","modalResultTextStyle","ModalWebSpeech","webSpeechMiddleResult","stopRecording","Pressable","position","innerContainer","marginHorizontal","bottom","inputAndMicrophone","Platform","OS","input","paddingLeft","rightIconButtonStyle","paddingRight","borderLeftWidth","borderLeftColor","swipeToCancelView","swipeText","emoticonButton","recordingActive","recordingTime","microphoneAndLock","lockView","borderTopLeftRadius","borderTopRightRadius","sendButton","ChatInput","online","dispatch","useDispatch","setInput","microphonecolor","setMicrophoneColor","isWebRecording","setIsWebRecording","setWebSpeechMiddleResult","recognitionWebRef","useRef","undefined","cacheInputTextRef","window","current","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onend","onresult","event","interim_transcript","final_transcript","results","resultList","confidence","isFinal","transcript","onerror","KeyboardAvoidingView","behavior","TextInput","multiline","placeholder","value","onChangeText","text","a","async","start","disabled","inputTextJson","concat","isVisible","useNativeDriver","backdropOpacity","stop","Textmessage","MessageBox","messageContent","isOnLeft","messageType","isComplete","marginVertical","startText","messageContainer","shadowColor","shadowOpacity","shadowOffset","elevation","startmessageContainer","timeView","time","iconContainer","InnerBox","isLeft","completeIndex","floorOrder","indexOf","Number","completeFloorIndex","AIcon","Animated","createAnimatedComponent","Icon","useSharedValue","uas","useAnimatedStyle","transform","translateX","TRANSLATE_X_THRESHOLD","Dimensions","get","InstructionMsgeventHandler","useAnimatedGestureHandler","onActive","ctx","translationX","onEnd","runOnJS","Speech","withTiming","rIconStyle","opacity","onGestureEvent","onHandlerStateChange","nativeEvent","left","ExpandableListView","isopen","setIsOpen","innerBox","subCategory","prev","HeadText","categoryName","sub","tinyLogo","overflow","flatli","item","padding","display","alignContent","titleView","Options","optionRefDec","renderItem","prefix","sendOption","FlatList","extraData","data","keyExtractor","horizontal","Start","instructiontext","Object","keys","Message","setScrollState","largerscale","type","NoralMsgeventHandler","enlarge","ChatMessagessList","user","scrollView","scrollViewEnable","setScrollViewEnable","newFloorArray","i","len","currentMessage","floorNumber","push","ScrollView","ref","onContentSizeChange","scrollToEnd","animated","scrollEnabled","author","ChatBotScreen","ws_scheme","socketUrl","onlinestatus","setOnlineStatus","useWebSocket","onOpen","onError","err","shouldReconnect","closeEvent","reconnectAttempts","reconnectInterval","lastJsonMessage","readyState","connectionStatus","ReadyState","CONNECTING","OPEN","CLOSING","CLOSED","UNINSTANTIATED","newDict","newDict2","JSON","parse","stringify","StatusBar","barStyle","crossPlatformContainer","headerContainer","bodyContainer","flexGrow","bottomContainer","goBackBotton","calibrationButtonViewStyle","calibrationButtonTextStyle","textAlign","stopButtonViewStyle","bgImageStyle","guideContainer","mainTextStyle","multiColumnContaner","subKeywordViewContainer","subKeywordStyle","subTextViewContainer","flexShrink","subTextStyle","paginationButtonContainer","buttonTextStyle","modalViewContainer","modalTextStyle","modalYesButtonStyle","modalNoButtonStyle","MapNavigationScreen","route","params","infoIndex","getNextStepIndices","shift","curFloorIndex","curInfoIndex","flag","result","instructArray","ifGuideStart","getFutureInstructionText","currentFloorIndex","currentInfoIndex","future","notyet_floorIndex","notyet_index","obj","nextInstructionText","setNextInstructionText","goNextStep","res","newFloorIndex","newIndex","setModalContent","setIsModalVisible","zoomableViewRef","zoomVal","imageCenter","initialBasePoint","basePoint","angle","setAngle","scale_to_canvas","vector","targetPoint","previousAutoTotalMove","previousTransformTotalMove","updateBasePoint","rotation_angle","delta_rotation_angle","newPoint","arbitraryPoint","centerPoint","relativeCoordinate","rotatedVector","rotateRelativeToCenter","rotateLineToVertical","point1","point2","needToRotate","basePointGuide_Going","nowPathPoints","updatedAngle","disVector","rotDicVector","disX","disY","moveBy","basePointGuide","calibraOnly","zoomTo","setTimeout","calibraVector","currentPathPoints","all_points","getPathCoordinates","isModalVisible","modalContent","SafeAreaView","Button","goBackView","goBack","MaterialCommunityIcons","onTransform","zoomableViewEventObject","zoomLevel","offsetX","offsetY","img_width","img_height","rotate","borderRightColor","borderRightWidth","Stack","createStackNavigator","MyStack","Navigator","initialRouteName","screenOptions","headerShown","gestureEnabled","Screen","component","registerRootComponent","NavigationContainer"],"mappings":"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","file":"static/js/app.6bafed0e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    instructions:{},\r\n    instructionTexts: {}, // Key: floor number; value: instruction text object\r\n    floor:-10,\r\n    index:-1,\r\n    reply:null,\r\n    message:null,\r\n    dialogMessages: [],\r\n}\r\n\r\nexport const infoSlice = createSlice({\r\n    name:'info',\r\n    initialState,\r\n    reducers:{\r\n        setInstructions:(state, action)=>{\r\n            state.instructions = action.payload;\r\n        },\r\n        setInstructionTexts: (state, action) => {\r\n            state.instructionTexts = action.payload;\r\n        },\r\n        setIndex:(state, action)=>{\r\n            state.index = action.payload;\r\n        },\r\n        setReply:(state, action)=>{\r\n            state.reply = action.payload;\r\n        },\r\n        setMessage:(state, action)=>{\r\n            state.message = action.payload;\r\n        },\r\n        setFloor:(state, action)=>{\r\n            state.floor = action.payload;\r\n        },\r\n        setDialogMessages: (state, action) => {\r\n            state.dialogMessages = action.payload;\r\n        }\r\n    },\r\n});\r\n\r\nexport const { setInstructions, setInstructionTexts, setIndex, setReply, setMessage, setFloor, setDialogMessages } = \r\n    infoSlice.actions;\r\n\r\n// Selectors\r\nexport const selectInstructions = (state) => state.info.instructions;\r\nexport const selectInstructionTexts = (state) => state.info.instructionTexts;\r\nexport const selectIndex = (state) => state.info.index;\r\nexport const selectReply = (state) => state.info.reply;\r\nexport const selectMessage = (state) => state.info.message;\r\nexport const selectFloor = (state) => state.info.floor;\r\nexport const selectDialogMessages = (state) => state.info.dialogMessages;\r\n\r\n\r\nexport default infoSlice.reducer; //nav(name) Reducer ==> navReducer","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst UNKNOWNVALUE = -100;\r\n\r\nexport const mapSlice = createSlice({\r\n    name: 'map',\r\n    initialState: {\r\n        mapFloor: UNKNOWNVALUE,\r\n        floorArray: null,\r\n        floorIndex: -1,\r\n    },\r\n    reducers:{\r\n        setMapFloor: (state, action) => {\r\n            console.log(`地圖的樓層設定為第 ${action.payload} 樓`);\r\n            state.mapFloor = action.payload;\r\n        },\r\n        setFloorArray: (state, action) => {\r\n            state.floorArray = action.payload;\r\n            if (action.payload.length > 0) {\r\n                console.log(`地圖的樓層指引依序為 ${action.payload}`);\r\n            }\r\n        },\r\n        setFloorIndex: (state, action) => {\r\n            state.floorIndex = action.payload;\r\n        }\r\n    },\r\n});\r\n\r\n\r\n// Selectors\r\nexport const selectMapFloor = (state) => state.map.mapFloor;\r\nexport const selectFloorArray = (state) => state.map.floorArray;\r\nexport const selectFloorIndex = (state) => state.map.floorIndex;\r\n\r\nexport const { setMapFloor, setFloorArray, setFloorIndex } = mapSlice.actions;\r\n\r\nexport default mapSlice.reducer; //nav(name) Reducer ==> navReducer","import { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport infoReducer from './redux/infoSlice'\r\nimport mapReducer from './redux/mapSlice'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        info: infoReducer,\r\n        map: mapReducer,\r\n    },\r\n});","export const theme = {\r\n\tcolors: {\r\n\t\tprimary: '#003153',\r\n\t\twhite: '#fff',\r\n\t\tblack: '#000',\r\n\t\tsearchIcon: '#999',\r\n\t\tsearchText: '#444',\r\n\t\tsearchBackground: '#f0f0f0',\r\n\t\ttitle: \"#000\",\r\n\t\tsubTitle: '#555',\r\n\t\tstoryBorder: '#00f',\r\n\t\tdescription: '#9f9f9f',\r\n\t\tinputBackground: '#f0f0f0',\r\n\t\tinputText: '#000',\r\n\t\tmessageBackground: '#1B5583',\r\n\t\tdanger: '#df4759',\r\n\t\tsuccess: \"#4b0\",\r\n\t\tlight: '#ccc',\r\n\t\thalfOpacitySecondary: 'rgba(240, 149, 17, 0.5)',\r\n\t\thalfOpacityPrimary: 'rgba(0, 132, 255, 0.5)',\r\n\t\tstoryBorder: \"#00f\"\r\n\t},\r\n\tfontSize: {\r\n\t\ttitle: 18,\r\n\t\tsubTitle: 13,\r\n\t\tmessage: 15\r\n\t}\r\n};","import React from 'react';\r\nimport { View, Text, Image, StyleSheet} from 'react-native';\r\nimport { theme } from '../styling/theme';\r\n\r\n\r\nconst OnlineStatus = ({ onlineStatus }) => {\r\n    const onlineText = 'Online';\r\n    const onlineUri = 'https://miro.medium.com/max/512/1*nZ9VwHTLxAfNCuCjYAkajg.png';\r\n    const OfflineText = 'Offline'\r\n    const offlineUri = 'https://pngimage.net/wp-content/uploads/2018/06/rec-icon-png-5.png';\r\n    return onlineStatus ? (\r\n        <View style={styles.onlineStatusContainer}>\r\n            <Text style={styles.onlineStatus}>{onlineText}</Text>\r\n            <Image style={styles.statusImage} source={{uri:onlineUri}} />\r\n        </View>\r\n        )\r\n        :(\r\n        <View style={styles.onlineStatusContainer}>\r\n            <Text style={styles.onlineStatus}>{OfflineText}</Text>\r\n            <Image style={styles.statusImage} source={{uri:offlineUri}} />\r\n        </View>\r\n        )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    onlineStatusContainer:{\r\n\t\tflexDirection:'row',\r\n        paddingHorizontal: 20\r\n\t},\r\n    onlineStatus: {\r\n        color: theme.colors.white,\r\n        fontSize: 16,\r\n    },\r\n    statusImage:{\r\n        height: 5,\r\n        width: 5,\r\n        borderRadius: 32.5,\r\n        alignSelf:'center',\r\n        margin:3,\r\n    }\r\n})\r\nexport default OnlineStatus;","import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, LogBox } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { theme } from '../styling/theme';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport OnlineStatus from './Header.OnlineStatus';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n// ignore this warning and pass functions thought route params safely.\r\nLogBox.ignoreLogs([\r\n\t'Non-serializable values were found in the navigation state',\r\n]);\r\n\r\nconst ChatHeader = ({ botname, locationName, onlineStatus, sendJsonMessage}) => {\r\n\t// use the useNavigation to provide the navigation prop automatically\r\n\tconst navigation = useNavigation();\r\n\r\n    return (\r\n\t\t<LinearGradient colors={['#C33764', '#1D2671', '#192f6a']} style={styles.container}>\r\n\t\t\t<TouchableOpacity style={styles.backButton}>\r\n\t\t\t\t<Icon name=\"angle-left\" size={30} color={theme.colors.white} />\r\n\t\t\t</TouchableOpacity>\r\n\t\t\t<View style={styles.profileOptions}>\r\n\t\t\t\t<TouchableOpacity style={styles.profile}>\r\n\t\t\t\t\t<View style={styles.usernameAndLocationName}>\r\n\t\t\t\t\t\t<View style={styles.usernameAndOnlineStatus}>\r\n\t\t\t\t\t\t\t<Text style={styles.username}>{botname}</Text>\r\n\t\t\t\t\t\t\t<OnlineStatus onlineStatus={onlineStatus}/>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t<View>\r\n\t\t\t\t\t\t\t<Text style={styles.locationName}>{locationName}</Text>\r\n\t\t\t\t\t\t</View>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t<View>\r\n\t\t\t\t\t<TouchableOpacity style={styles.options} onPress={() => navigation.navigate(\"MapNavigation\", {\r\n\t\t\t\t\t\tsendJsonMessage\r\n\t\t\t\t\t})}>\r\n\t\t\t\t\t\t<Text style={styles.mapButton}>地圖模式</Text>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</LinearGradient>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflexDirection: \"row\",\r\n\t\tbackgroundColor: theme.colors.primary,\r\n\t\tpaddingTop: 25,\r\n\t\tpaddingBottom: 10,\r\n\t},\r\n\tbackButton: {\r\n\t\talignSelf: \"center\",\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tprofileOptions: {\r\n\t\tflex: 1,\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tprofile: {\r\n\t\tflexDirection: \"row\",\r\n\t\talignItems: \"center\",\r\n\t\tborderColor: \"#fff\",\r\n\t\tflex: 4,\r\n\t},\r\n\timage: {\r\n\t\theight: 65,\r\n\t\twidth: 65,\r\n\t\tborderRadius: 32.5,\r\n\t}\r\n\t,\r\n\tusernameAndOnlineStatus: {\r\n\t\tflexDirection: \"row\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tusernameAndLocationName: {\r\n\t\tflexDirection: \"column\",\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\tusername: {\r\n\t\tcolor: theme.colors.white,\r\n\t\tfontSize: 18,\r\n\t\tfontWeight: \"bold\",\r\n\t},\r\n\tlocationName: {\r\n\t\tcolor: theme.colors.white,\r\n\t\tfontWeight: \"bold\",\r\n\t\tfontSize: 16,\r\n\t\tpaddingHorizontal: 10,\r\n\t},\r\n\toptions: {\r\n\t\tpaddingHorizontal: 6, \r\n\t\tpaddingVertical: 10, \r\n\t\tborderRadius: 5, \r\n\t\tbackgroundColor: \"#68a0cf\"\r\n\t},\r\n\tmapButton: {\r\n\t\tcolor: \"white\"\r\n\t}\r\n})\r\n\r\nexport default ChatHeader","\r\nconst HTTP_SCHEME = 'https';\r\nconst DOMAIN_NAME = 'iasl.asia.edu.tw'; // 127.0.0.1\r\nconst PORT_WS = 808;\r\nconst PORT_django = 809;\r\n\r\n/** get current time */\r\nconst getNowTime = () => {\r\n    let today = new Date()\r\n    let hour = today.getHours();\r\n    let min = today.getMinutes();\r\n    if (hour < 10) {\r\n        hour = '0' + hour.toString()\r\n    }\r\n    if (min < 10) {\r\n        min = '0' + min.toString()\r\n    }\r\n    return [hour, min];\r\n};\r\n\r\n/**  Construct svg path expression from instructions */\r\nconst changePath = (tmpInstructions) => {\r\n    \r\n    let path = \"M\"\r\n    try {\r\n        tmpInstructions.forEach((ins, index) => {\r\n\r\n            if (index === 0) {\r\n                path += ins[0] + \",\" + ins[1];\r\n            }\r\n            else {\r\n                path+= \"L\" + ins[0]+ \",\" + ins[1];\r\n            }\r\n        });\r\n    }\r\n    catch(error) {\r\n        throw error;\r\n    }\r\n    // console.log('svg path = ', path);\r\n    return path\r\n};\r\n\r\n/**  Construct svg path's point array from instructions */\r\nconst getPathCoordinates = (tmpInstructions) => {\r\n    let all_points = [];\r\n\r\n    tmpInstructions.forEach((ins) => {\r\n        all_points.push({x: ins[0], y: ins[1]});\r\n    });\r\n\r\n    return all_points;\r\n};\r\n\r\n\r\n// Basic Math\r\nconst radian2Degree = (radianValue) => {\r\n    return radianValue * 180 / Math.PI;\r\n};\r\n\r\nconst degree2Radian = (degreeValue) => {\r\n    return degreeValue * Math.PI / 180;\r\n}\r\n\r\nconst computeVector = (p1, p2) => {\r\n    return {\r\n        x: p2.x - p1.x, \r\n        y: p2.y - p1.y\r\n    };\r\n};\r\n\r\n/** get -180~180 degree number. For canvas, 從x軸起算，順時針為正的角度 */\r\nconst calcAngleDegrees = (x, y) => {\r\n    return radian2Degree(Math.atan2(y, x));\r\n}\r\n\r\n/** angleInDegree: 順時針的角度 */\r\nconst rotatePoint = (point, angleInDegree) => {\r\n    const angleInRadian = degree2Radian(angleInDegree);\r\n\r\n    return {\r\n        x: point.x * Math.cos(angleInRadian) - point.y * Math.sin(angleInRadian), \r\n        y: point.x * Math.sin(angleInRadian) + point.y * Math.cos(angleInRadian)\r\n    };\r\n};\r\n\r\n/** angleInDegree: 順時針的角度 */\r\nconst rotateRelativeToCenter = (arbitraryPoint, centerPoint, angleInDegree) => {\r\n    const relativeCoordinate = {x: arbitraryPoint.x - centerPoint.x, y: arbitraryPoint.y - centerPoint.y};\r\n\r\n    let rotatedVector = rotatePoint(relativeCoordinate, angleInDegree);\r\n    return {\r\n        x: centerPoint.x + rotatedVector.x, \r\n        y: centerPoint.y + rotatedVector.y\r\n    };\r\n};\r\n\r\nexport {\r\n    DOMAIN_NAME,\r\n    PORT_WS,\r\n    PORT_django,\r\n    HTTP_SCHEME,\r\n\r\n    getNowTime,\r\n    changePath, \r\n    getPathCoordinates, \r\n\r\n    radian2Degree, \r\n    degree2Radian,\r\n    calcAngleDegrees,\r\n    computeVector,\r\n    rotatePoint,\r\n    rotateRelativeToCenter,\r\n};","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { View, StyleSheet, ImageBackground} from 'react-native';\r\nimport ReactNativeZoomableView from '@openspacelabs/react-native-zoomable-view/src/ReactNativeZoomableView';\r\nimport Svg ,{ Defs, Marker, Path, Circle } from 'react-native-svg';\r\n\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { selectIndex, selectInstructions } from '../redux/infoSlice';\r\nimport { selectMapFloor } from \"../redux/mapSlice\";\r\nimport { changePath, DOMAIN_NAME, HTTP_SCHEME, PORT_django } from \"../utils/commonUtil\";\r\n\r\n\r\nconst ChatImageMap = () => {\r\n    // https://reactjs.org/logo-og.png\r\n    // http://61.219.68.130:809/static/image/03.jpeg\r\n    const [imageURL, setImageURL] = useState(`${HTTP_SCHEME}://${DOMAIN_NAME}:${PORT_django}/static/image/03.jpeg`)\r\n\r\n    // svg-related settings\r\n    var svg_width = 409.6;\r\n    var svg_height = 222.8;\r\n    var viewBoxProps = \"0 0 1024 557\"; // equal to original image's size\r\n    const [svgPath, setSvgPath] = useState('M 0 0 L 0 0');\r\n    \r\n    // redux\r\n    const instructions = useSelector(selectInstructions);\r\n    const mapFloor = useSelector(selectMapFloor);\r\n    const index = useSelector(selectIndex);\r\n\r\n    useEffect(() => {\r\n        if (mapFloor > -100 && index >= 0) {\r\n            let tmpInstructions = instructions[mapFloor.toString()];\r\n            if (index > 0) {\r\n                tmpInstructions = tmpInstructions.slice(index);\r\n            }\r\n            setSvgPath(changePath(tmpInstructions));\r\n            setImageURL(`${HTTP_SCHEME}://${DOMAIN_NAME}:${PORT_django}/static/image/0${mapFloor}.jpeg`);\r\n        }\r\n        else {\r\n            // default image before indoor guide\r\n            setSvgPath('M 0 0 L 0 0');\r\n            setImageURL(`https://reactjs.org/logo-og.png`);\r\n        }\r\n    }, [mapFloor, index]);\r\n\r\n    \r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <ReactNativeZoomableView\r\n                maxZoom={3}\r\n                minZoom={1}\r\n                zoomStep={0.5}\r\n                initialZoom={1}\r\n                bindToBorders={true}\r\n                style={styles.messageView}\r\n            >\r\n                <ImageBackground source={{ uri: imageURL }} style={[styles.Imagemessage, {width: svg_width, height: svg_height}]}>\r\n                    <Svg width={svg_width} height={svg_height} viewBox={viewBoxProps}>\r\n                        <Defs>\r\n                            <Marker\r\n                                id=\"Triangle\"\r\n                                viewBox=\"0 0 10 10\"\r\n                                refX=\"0\"\r\n                                refY=\"5\"\r\n                                markerUnits=\"strokeWidth\"\r\n                                markerWidth=\"3\"\r\n                                markerHeight=\"3\"\r\n                                orient=\"auto\"\r\n                            >\r\n                                <Path\r\n                                    d=\"M 0 0 L 10 5 L 0 10 z\" \r\n                                    fill=\"black\"\r\n                                    stroke=\"red\"\r\n                                    strokeWidth=\"1\"\r\n                                />\r\n                            </Marker>\r\n                            <Marker\r\n                                id=\"startPoint\"\r\n                                viewBox=\"0 0 10 10\"\r\n                                refX=\"5\"\r\n                                refY=\"5\"\r\n                                markerUnits=\"strokeWidth\"\r\n                                markerWidth=\"3\"\r\n                                markerHeight=\"3\"\r\n                                orient=\"auto\"\r\n                            >\r\n                                    <Circle \r\n                                        cx=\"5\" \r\n                                        cy=\"5\" \r\n                                        r=\"5\" \r\n                                        fill=\"green\"\r\n                                    />\r\n                            </Marker>\r\n                            <Marker\r\n                                id=\"midPoint\"\r\n                                viewBox=\"0 0 10 10\"\r\n                                refX=\"5\"\r\n                                refY=\"5\"\r\n                                markerUnits=\"strokeWidth\"\r\n                                markerWidth=\"2\"\r\n                                markerHeight=\"2\"\r\n                                orient=\"auto\"\r\n                            >\r\n                                <Circle cx=\"5\" cy=\"5\" r=\"5\" fill=\"grey\"/>\r\n                            </Marker>\r\n                        </Defs>\r\n\r\n                        <Path\r\n                            d={svgPath}\r\n                            // d=\"M 0 0 L 10 5 L 0 10 z\"\r\n                            fill=\"none\"\r\n                            stroke=\"black\"\r\n                            strokeWidth=\"10\"\r\n                            markerStart=\"url(#startPoint)\"\r\n                            markerMid=\"url(#midPoint)\"\r\n                            markerEnd=\"url(#Triangle)\"\r\n                        />\r\n                    </Svg>\r\n                </ImageBackground>\r\n            </ReactNativeZoomableView>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderColor: \"#9879e0\",\r\n        borderBottomWidth: 1.5,\r\n        flex: 0.6\r\n    },\r\n    messageView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tmaxWidth: \"100%\",\r\n\t},\r\n    Imagemessage: {\r\n\t\talignSelf: \"center\",\r\n\t},\r\n})\r\n\r\nexport default ChatImageMap;","import { Pressable, StyleSheet, Text, View } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { theme } from \"../styling/theme\";\r\n\r\nconst ModalWebSpeech = ({webSpeechMiddleResult, stopRecording}) => {\r\n    return (\r\n        <View style={styles.modalContainer}>\r\n            <View style={styles.modalHeader}>\r\n                <Icon name=\"microphone\" size={32} color={theme.colors.danger}></Icon>\r\n                <Text style={styles.modalPromptTextStyle}>辨識中，請說話</Text>\r\n                <Pressable style={styles.modalButtonStyle} onPress={() => stopRecording()}>\r\n                    <Text>關閉</Text>\r\n                </Pressable>\r\n            </View>\r\n            <View>\r\n                <Text style={styles.modalResultTextStyle}>{webSpeechMiddleResult}</Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tmodalContainer: {\r\n\t\tbackgroundColor: 'white',\r\n\t\tpaddingHorizontal: 20,\r\n\t\tpaddingVertical: 20,\r\n\t},\r\n\tmodalHeader: {\r\n\t\tflexDirection: 'row',\r\n\t\talignItems: 'center',\r\n\t\tmarginBottom: 12,\r\n\t},\r\n\tmodalPromptTextStyle: {\r\n\t\tmarginLeft: 10,\r\n\t\tmarginRight: 50,\r\n\t},\r\n\tmodalButtonStyle: {\r\n\t\tborderColor: '#dddddf',\r\n\t\tborderWidth: 2,\r\n\t\tborderRadius: 8,\r\n\t\tpaddingVertical: 10,\r\n\t\tpaddingHorizontal: 15\r\n\t},\r\n\tmodalResultTextStyle: {\r\n\t\tcolor: '#2596be',\r\n\t\tfontSize: 18,\r\n\t}\r\n});\r\n \r\nexport default ModalWebSpeech;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { View,StyleSheet,TextInput, Platform, TouchableOpacity,KeyboardAvoidingView } from \"react-native\";\r\nimport Modal from \"react-native-modal\";\r\n\r\n// import Voice from \"@react-native-voice/voice\";\r\n\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport { theme } from \"../styling/theme\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFloorArray, setMapFloor } from \"../redux/mapSlice\";\r\nimport { selectDialogMessages, setDialogMessages, setInstructionTexts } from \"../redux/infoSlice\";\r\nimport { getNowTime } from \"../utils/commonUtil\";\r\nimport ModalWebSpeech from \"./Modal.WebSpeech\";\r\n\r\nconst ChatInput = ({ online, sendJsonMessage}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst dialogMessages = useSelector(selectDialogMessages);\r\n\r\n\r\n\tconst [input, setInput] = useState(\"\");\r\n\tconst [microphonecolor, setMicrophoneColor] = useState(theme.colors.description);\r\n\tconst [isWebRecording, setIsWebRecording] = useState(false);\r\n\tconst [webSpeechMiddleResult, setWebSpeechMiddleResult] = useState('');\r\n\t\r\n\tlet recognitionWebRef = useRef(undefined);\r\n\tlet cacheInputTextRef = useRef('');\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Platform.OS === 'web') {\r\n\t\t\tif ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\r\n\t\t\t\tconsole.log(\"speech recognition API supported\");\r\n\r\n\t\t\t\trecognitionWebRef.current = new window.webkitSpeechRecognition();\r\n\t\t\t\trecognitionWebRef.current.continuous = true;\r\n\t\t\t\trecognitionWebRef.current.interimResults = true;\r\n\t\t\t\trecognitionWebRef.current.lang = 'cmn-Hant-TW'; // 中文 (台灣)\r\n\r\n\t\t\t\t// register related events\r\n\t\t\t\trecognitionWebRef.current.onstart = () => { // 開始辨識\r\n\t\t\t\t\t// console.log('webkitSpeechRecognition event: onstart');\r\n\t\t\t\t\tsetIsWebRecording(true); // 設定為辨識中\r\n\t\t\t\t\tsetMicrophoneColor(theme.colors.danger);\r\n\t\t\t\t\t\r\n\t\t\t\t\tcacheInputTextRef.current = input;\r\n\t\t\t\t};\r\n\t\t\t\trecognitionWebRef.current.onend = () => { // 辨識完成\r\n\t\t\t\t\t// console.log('webkitSpeechRecognition event: onend');\r\n\t\t\t\t\tsetIsWebRecording(false); // 設定為「非辨識中」\r\n\t\t\t\t\tsetMicrophoneColor(theme.colors.description);\r\n\t\t\t\t};\r\n\t\t\t\trecognitionWebRef.current.onresult = (event) => { // 辨識有任何結果時\r\n\t\t\t\t\t// console.log('event.results = ', event.results);\r\n\t\t\t\t\tvar interim_transcript = '';\r\n\t\t\t\t\tvar final_transcript = '';\r\n\t\r\n\t\t\t\t\tfor (let resultList of event.results) {\r\n\t\t\t\t\t\t// [0]: SpeechRecognitionAlternative {transcript: '活動中心地下室', confidence: 0.009999999776482582}\r\n\t\t\t\t\t\tif (resultList[0].confidence < 0.000001) {\r\n\t\t\t\t\t\t\tcontinue; // 不取confidence接近0的結果\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif (resultList.isFinal) {\r\n\t\t\t\t\t\t\tfinal_transcript += resultList[0].transcript;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tinterim_transcript += resultList[0].transcript;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// this.interimTranscriptSubject.next(interim_transcript);\r\n\t\t\t\t\t// this.finalTranscriptSubject.next(final_transcript);\r\n\t\t\t\t\tsetWebSpeechMiddleResult(interim_transcript);\r\n\t\t\t\t\tsetInput(cacheInputTextRef.current + final_transcript);\r\n\t\t\t\t};\r\n\t\t\t\trecognitionWebRef.current.onerror = (event) => {\r\n\t\t\t\t\tif (event.error === 'not-allowed') {\r\n\t\t\t\t\t\t// Permission to use microphone is blocked.\r\n\t\t\t\t\t\tconsole.log('webkitSpeechRecognition event: onerror');\r\n\t\t\t\t\t\tconsole.log(event);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log(\"speech recognition API not supported\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Voice.getSpeechRecognitionServices();\r\n\t\t\t// Voice.onSpeechStart = onSpeechStartHandler;\r\n\t\t\t// Voice.onSpeechEnd = onSpeechEndHandler;\r\n\t\t\t// Voice.onSpeechResults = onSpeechResultsHandler;\r\n\t\t\t// Voice.onSpeechError = onSpeechErrorHandler;\r\n\r\n\t\t\t// return () => {\r\n\t\t\t// \tVoice.destroy().then(Voice.removeAllListeners);\r\n\t\t\t// }\r\n\t\t}\r\n\t}, [])\r\n\r\n\t// const onSpeechErrorHandler = async (e) => {\r\n\t// \tconsole.log(\"error ==>\", e)\r\n\t// \tawait destroyVoiceInstance()\r\n\t// }\r\n\r\n\t// const destroyVoiceInstance = async () => {\r\n\t// \ttry{\r\n\t// \t\tawait Voice.stop();\r\n\t// \t\tawait Voice.destroy().then(Voice.removeAllListeners());\r\n\t// \t}\r\n\t// \tcatch(e){\r\n\t// \t\tconsole.log(e)\r\n\t// \t}\r\n\t\t\r\n\t// }\r\n\t\r\n\t// const onSpeechStartHandler = async (e) => {\r\n\t// \tconsole.log(\"start handler==>>>\", e)\r\n\t// }\r\n\t// const onSpeechEndHandler = async (e) => {\r\n\t// \tconsole.log(\"stop handler\", e)\r\n\t// \ttry {\r\n\t// \t\tawait Voice.stop()\r\n\t// \t\tsetMicrophoneColor(theme.colors.description)\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.log(\"error raised\", error)\r\n\t// \t}\r\n\t// }\r\n\t\r\n\t// const onSpeechResultsHandler = async (e) => {\r\n\t// \tlet text = e.value[0]\r\n\t// \tlet result = input + text\r\n\t// \tsetInput(result)\r\n\t// \tconsole.log(\"speech result handler\", e)\r\n\t// \ttry {\r\n\t// \t\tawait Voice.stop()\r\n\t// \t\tsetMicrophoneColor(theme.colors.description)\r\n\t// \t} catch (error) {\r\n\t// \t\tconsole.log(\"error raised\", error)\r\n\t// \t}\r\n\t// }\r\n\t\r\n\tconst startRecording = async () => {\r\n\t\tif (Platform.OS === 'web') {\r\n\t\t\trecognitionWebRef.current.start();\r\n\t\t}\r\n\t\t// else {\r\n\t\t// \ttry {\r\n\t\t// \t\tsetMicrophoneColor(theme.colors.danger)\r\n\t\t// \t\tawait Voice.start('zh-TW', {\r\n\t\t// \t\t\t\"RECOGNIZER_ENGINE\": \"GOOGLE\",\r\n\t\t// \t\t\t \"EXTRA_PARTIAL_RESULTS\": true\r\n\t\t// \t\t  })\r\n\t\t// \t\tconsole.log('started')\r\n\t\t// \t} \r\n\t\t// \tcatch (error) {\r\n\t\t// \t\tconsole.log(\"error raised\", error)\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\tconst stopRecording = async () => {\r\n\t\tif (Platform.OS === 'web') {\r\n\t\t\trecognitionWebRef.current.stop();\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// try {\r\n\t\t\t// \tawait Voice.stop()\r\n\t\t\t// \tsetMicrophoneColor(theme.colors.description)\r\n\t\t\t// } \r\n\t\t\t// catch (error) {\r\n\t\t\t// \tconsole.log(\"error raised\", error)\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tif (input === '') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet [hour, min] = getNowTime();\r\n\r\n\t\tlet inputTextJson = {\r\n\t\t\t'author': \"user\",\r\n\t\t\t'type':'text',\r\n\t\t\t'message': input,\r\n\t\t\t'time': hour + ':' + min,\r\n\t\t}\r\n\t\tsendJsonMessage(inputTextJson);\r\n\r\n\t\tif (input !== \"/done\") {\r\n\t\t\tdispatch(setDialogMessages(dialogMessages.concat(inputTextJson)));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdispatch(setDialogMessages([]));\r\n\t\t\tdispatch(setMapFloor(-100));\r\n\t\t\tdispatch(setInstructionTexts({}));\r\n\t\t\tdispatch(setFloorArray([]));\r\n\t\t}\r\n\r\n\t\tsetInput('');\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<KeyboardAvoidingView behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} style={styles.container}>\r\n\r\n\t\t\t<View style={styles.innerContainer}>\r\n\t\t\t\t<View style={styles.inputAndMicrophone}>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\tplaceholder={\"Type something...\"}\r\n\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\tvalue={input}\r\n\t\t\t\t\t\tonChangeText={(text) => setInput(text)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\tstyle={styles.rightIconButtonStyle}\r\n\t\t\t\t\t\tonPress={startRecording}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<Icon\r\n\t\t\t\t\t\tname=\"microphone\"\r\n\t\t\t\t\t\tsize={23}\r\n\t\t\t\t\t\tcolor={microphonecolor}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</TouchableOpacity>\r\n\r\n\t\t\t\t</View>\r\n\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\tstyle={styles.sendButton} \r\n\t\t\t\t\tdisabled={!online} \r\n\t\t\t\t\tonPress={handleSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Icon\r\n\t\t\t\t\t\tname=\"send\"\r\n\t\t\t\t\t\tsize={23}\r\n\t\t\t\t\t\tcolor={theme.colors.white}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TouchableOpacity>\r\n\r\n\r\n\t\t\t\t{/** Modal implementation */}\r\n\t\t\t\t<Modal isVisible={isWebRecording} useNativeDriver={true} backdropOpacity={0.5}>\r\n\t\t\t\t\t<ModalWebSpeech webSpeechMiddleResult={webSpeechMiddleResult} stopRecording={stopRecording} />\r\n\t\t\t\t</Modal>\r\n\t\t\t</View>\r\n      \t\t\r\n\t  \t</KeyboardAvoidingView>\r\n\t);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tjustifyContent: \"center\",\r\n\t\tbackgroundColor: theme.colors.white,\r\n\t\tposition:\"relative\",\r\n\t},\r\n\tinnerContainer: {\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 13,\r\n\t\tbottom: 2,\r\n\t\tjustifyContent: \"space-between\",\r\n\t\talignItems: \"center\",\r\n\t\tflexDirection: \"row\",\r\n\t\tpaddingVertical: 1,\r\n\t\theight: 70,\r\n\t},\r\n\tinputAndMicrophone: {\r\n\t\tflexDirection: \"row\",\r\n\t\tbackgroundColor: theme.colors.inputBackground,\r\n\t\tflex: 3,\r\n\t\tmarginRight: 10,\r\n\t\tpaddingVertical: Platform.OS === \"ios\" ? 10 : 0,\r\n\t\tborderRadius: 30,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t},\r\n\tinput: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tpaddingLeft: 20,\r\n\t\tmargin: 3,\r\n\t\tcolor: theme.colors.inputText,\r\n\t\tflex: 2,\r\n\t\tfontSize: 15,\r\n\t\theight: 35,\r\n\t\talignSelf: \"center\",\r\n\t\tjustifyContent:'center',\r\n\t},\r\n\trightIconButtonStyle: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingRight: 20,\r\n\t\tpaddingLeft: 10,\r\n\t\tborderLeftWidth: 1,\r\n\t\tborderLeftColor: \"#fff\",\r\n\t},\r\n\tswipeToCancelView: {\r\n\t\tflexDirection: \"row\",\r\n\t\talignItems: \"center\",\r\n\t\tmarginRight: 30,\r\n\t},\r\n\tswipeText: {\r\n\t\tcolor: theme.colors.description,\r\n\t\tfontSize: 15,\r\n\t},\r\n\temoticonButton: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\trecordingActive: {\r\n\t\tflexDirection: \"row\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"space-between\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\trecordingTime: {\r\n\t\tcolor: theme.colors.description,\r\n\t\tfontSize: 20,\r\n\t\tmarginLeft: 5,\r\n\t},\r\n\tmicrophoneAndLock: {\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tlockView: {\r\n\t\tbackgroundColor: \"#eee\",\r\n\t\twidth: 60,\r\n\t\talignItems: \"center\",\r\n\t\tborderTopLeftRadius: 30,\r\n\t\tborderTopRightRadius: 30,\r\n\t\theight: 130,\r\n\t\tpaddingTop: 20,\r\n\t},\r\n\tsendButton: {\r\n\t\tbackgroundColor: theme.colors.primary,\r\n\t\tborderRadius: 40,\r\n\t\theight: 40,\r\n\t\twidth: 40,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tpaddingRight: 2,\r\n\t},\r\n});\r\n\r\nexport default ChatInput;","import React from 'react';\r\nimport { View, Text, StyleSheet} from 'react-native';\r\n\r\n\r\nconst MessageBox = ({ messageContent, isOnLeft, messageType, isComplete}) => {\r\n\r\n\tlet finishTextColorStyle = {\r\n\t\tcolor: \"#d1d2de\",\r\n\t};\r\n\r\n\r\n    return (\r\n        <View style={styles.messageView}>\r\n            <Text style={[styles.Textmessage, isOnLeft(messageType), isComplete? finishTextColorStyle: {}]}>\r\n                {messageContent}\r\n            </Text>\r\n        </View>\r\n        \r\n    );\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tmessageView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tmaxWidth: \"80%\",\r\n\t},\r\n\tTextmessage: {\r\n\t\tcolor: \"white\",\r\n\t\talignSelf: \"flex-start\",\r\n\t\tfontSize: 15,\r\n\t},\r\n})\r\n\r\nexport default MessageBox;","import React from \"react\";\r\nimport { View, Text, StyleSheet, Dimensions } from \"react-native\";\r\n\r\nimport MessageBox from \"./Message.Normal\";\r\nimport Animated, {\r\n\tuseAnimatedStyle,\r\n\tuseAnimatedGestureHandler,\r\n\tuseSharedValue,\r\n\twithTiming,\r\n\trunOnJS,\r\n} from \"react-native-reanimated\";\r\nimport {\r\n\tPanGestureHandler,\r\n} from \"react-native-gesture-handler\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectIndex } from '../redux/infoSlice';\r\nimport { setFloor, setIndex } from \"../redux/infoSlice\";\r\nimport { theme } from \"../styling/theme\";\r\nimport * as Speech from 'expo-speech';\r\nimport { selectFloorArray, selectFloorIndex, setFloorIndex, setMapFloor } from \"../redux/mapSlice\";\r\n\r\nconst InnerBox = ({ index,message,isOnLeft,floor, messageType,time,isLeft}) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst floorArray = useSelector(selectFloorArray);\r\n\tconst completeIndex = useSelector(selectIndex);\r\n\r\n\tconst floorOrder = floorArray.indexOf(Number(floor));\r\n\tconst completeFloorIndex = useSelector(selectFloorIndex);\r\n\r\n    \r\n\tconst AIcon = Animated.createAnimatedComponent(Icon)\r\n\r\n    const x = useSharedValue(0);\r\n    const uas = useAnimatedStyle(() => {\r\n\t\treturn {\r\n\t\t\ttransform: [{ translateX: x.value }]\r\n\t\t}\r\n\t});\r\n    const SCREEN_WIDTH = Dimensions.get('window').width\r\n\tconst TRANSLATE_X_THRESHOLD = - SCREEN_WIDTH *0.2\r\n\r\n\tconst InstructionMsgeventHandler = useAnimatedGestureHandler({\r\n\t\tonActive: (event, ctx) => {\r\n\t\t\tif (isLeft){\r\n\t\t\t\tx.value = event.translationX;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd: (event, ctx) => {\r\n\t\t\tconst shouldBeDismissed = x.value < TRANSLATE_X_THRESHOLD\r\n\t\t\tif (shouldBeDismissed){\r\n\t\t\t\t// runOnJS(Tts.speak)(message);\r\n\t\t\t\trunOnJS(Speech.speak)(message)\r\n\t\t\t}\r\n\t\t\tx.value = withTiming(0);\r\n\t\t}\r\n\t});\r\n\r\n\tconst rIconStyle = useAnimatedStyle(()=>{\r\n\t\tconst opacity = withTiming(\r\n\t\t\tx.value < TRANSLATE_X_THRESHOLD ? 1 : 1\r\n\t\t);\r\n\t\treturn { opacity }\r\n\t})\r\n\r\n    return (\r\n        <View style={[styles.container]}>\r\n\r\n            <PanGestureHandler\r\n                onGestureEvent={InstructionMsgeventHandler}\r\n                onHandlerStateChange={({ nativeEvent }) => {\r\n                    if(nativeEvent.translationX > 40){\r\n                        dispatch(setIndex(index));\r\n                        dispatch(setFloor(floor));\r\n\t\t\t\t\t\tdispatch(setFloorIndex(floorOrder));\r\n\t\t\t\t\t\tdispatch(setMapFloor(floor));\r\n                        console.log('complete floor index, index and floor : ', floorOrder, index, floor)\r\n                    }\r\n                }}\r\n            >\r\n\t\t\t\t<Animated.View\r\n\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\tstyles.messageContainer,\r\n\t\t\t\t\t\tisOnLeft(\"messageContainer\"),\r\n\t\t\t\t\t\tuas\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n                            <MessageBox \r\n                                \r\n                                messageContent={message}\r\n                                isOnLeft={isOnLeft} \r\n                                messageType={messageType}\r\n\t\t\t\t\t\t\t\tisComplete={floorOrder < completeFloorIndex || (floorOrder == completeFloorIndex && index < completeIndex)}\r\n\t\t\t\t\t\t\t>\r\n\r\n                            </MessageBox>\r\n                            <View style={styles.timeView}>\r\n                                <Text style={[styles.time, isOnLeft(\"time\")]}>\r\n                                    {time}\r\n                                </Text>\r\n                            </View>\r\n\t\t\t\t\t\t\t<Animated.View style={[styles.iconContainer, rIconStyle]}>\r\n\t\t\t\t\t\t\t\t\t<AIcon\r\n\t\t\t\t\t\t\t\t\t\tname=\"volume-up\"\r\n\t\t\t\t\t\t\t\t\t\tcolor={theme.colors.description}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{left:30}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<AIcon\r\n\t\t\t\t\t\t\t\t\t\tname=\"long-arrow-left\"\r\n\t\t\t\t\t\t\t\t\t\tcolor={theme.colors.description}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{left:30}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Animated.View>\r\n                        \r\n                    </Animated.View>\r\n            </PanGestureHandler>\r\n         </View>\r\n\r\n    )\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tpaddingVertical: 10,\r\n\t\tmarginVertical: 5,\r\n\t},\r\n\tstartText:{\r\n\t\t\r\n\t},\r\n\tmessageContainer: {\r\n\t\tbackgroundColor: '#1D2671',\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n\tstartmessageContainer: {\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n\r\n\ttimeView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\r\n\ttime: {\r\n\t\tcolor: \"lightgray\",\r\n\t\tfontSize: 10,\r\n\t},\r\n\r\n\ticonContainer:{\r\n\t\t// position:'absolute',\r\n\t\t// right:'40%',\r\n\t\t// height:30,\r\n\t\t// width:30,\r\n\t\t// top:'40%',\r\n\t\tjustifyContent:'center',\r\n\t\talignItems:'center',\r\n\t\tfontSize:30,\r\n\t},\r\n\trightIconButtonStyle: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingRight: 20,\r\n\t\tpaddingLeft: 5,\r\n\t},\r\n    messageView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tmaxWidth: \"80%\",\r\n\t},\r\n\tTextmessage: {\r\n\t\tcolor: \"white\",\r\n\t\talignSelf: \"flex-start\",\r\n\t\tfontSize: 15,\r\n\t},\r\n});\r\n\r\nexport default InnerBox;\r\n","import React, {  useState } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity,Dimensions } from \"react-native\";\r\n\r\nimport Animated, {\r\n\tuseAnimatedStyle,\r\n\tuseSharedValue,\r\n} from \"react-native-reanimated\";\r\nimport { theme } from \"../styling/theme\";\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport InnerBox from \"./Message.InnerBox\"\r\n\r\nconst ExpandableListView = ({ messageContent, isOnLeft, messageType, time, isLeft, floor}) => {\r\n    const [isopen, setIsOpen] = useState(false)\r\n    const x = useSharedValue(0);\r\n\r\n    var innerBox = messageContent[0].subCategory\r\n    \r\n    const uas = useAnimatedStyle(() => {\r\n\t\treturn {\r\n\t\t\ttransform: [{ translateX: x.value }]\r\n\t\t}\r\n\t});\r\n    const SCREEN_WIDTH = Dimensions.get('window').width;\r\n\tconst TRANSLATE_X_THRESHOLD = - SCREEN_WIDTH *0.2;\r\n\r\n\r\n    return (\r\n        <View>\r\n            <TouchableOpacity onPress={()=> setIsOpen(prev => !prev)}>\r\n                <View style={[styles.container]}>\r\n                    <Animated.View style={uas}>\r\n                        <View\r\n\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\tstyles.messageContainer,\r\n\t\t\t\t\t\t\t\tisOnLeft(\"messageContainer\"),\r\n\t\t\t\t\t\t\t]}\r\n                        >\r\n\t\t\t\t\t\t\t<Text style={styles.HeadText}>{messageContent[0].categoryName + \"之指示 \"}    \r\n\t\t\t\t\t\t\t\t<Icon\r\n\t\t\t\t\t\t\t\t\tname= {isopen ?  \"arrow-up\" : \"arrow-down\"}\r\n\t\t\t\t\t\t\t\t\tcolor={theme.colors.description}\r\n\t\t\t\t\t\t\t\t\tstyle={[{left:30}]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Text>\r\n                        </View>\r\n                    </Animated.View>\r\n                </View>\r\n            </TouchableOpacity>\r\n\r\n\r\n\t\t\t{isopen && innerBox.map((sub,index)=>(\r\n\t\t\t<InnerBox\r\n\t\t\t\tkey={index}\r\n\t\t\t\tindex={sub.index}\r\n\t\t\t\tmessage={sub.name}\r\n\t\t\t\tisOnLeft={isOnLeft} \r\n\t\t\t\tfloor={floor}\r\n\t\t\t\tmessageType={messageType}\r\n\t\t\t\ttime={time}\r\n\t\t\t\tisLeft={isLeft}\r\n\t\t\t/>\r\n\r\n\t\t\t))}\r\n\r\n        </View>\r\n    )\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tpaddingVertical: 10,\r\n\t\tmarginVertical: 5,\r\n\t},\r\n\tstartText:{\r\n\t\t\r\n\t},\r\n\tmessageContainer: {\r\n\t\tbackgroundColor: '#1D2671',\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n\tstartmessageContainer: {\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n\r\n\ttimeView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\r\n\ttime: {\r\n\t\tcolor: \"lightgray\",\r\n\t\tfontSize: 10,\r\n\t},\r\n\r\n\ticonContainer:{\r\n\t\tjustifyContent:'center',\r\n\t\talignItems:'center',\r\n\t\tfontSize:30,\r\n\t},\r\n\trightIconButtonStyle: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingRight: 20,\r\n\t\tpaddingLeft: 5,\r\n\t},\r\n    messageView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tmaxWidth: \"80%\",\r\n\t},\r\n\tTextmessage: {\r\n\t\tcolor: \"white\",\r\n\t\talignSelf: \"flex-start\",\r\n\t\tfontSize: 15,\r\n\t},\r\n});\r\n\r\nexport default ExpandableListView;\r\n","import React from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, Image, FlatList } from \"react-native\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectDialogMessages, setDialogMessages } from \"../redux/infoSlice\";\r\nimport { getNowTime } from \"../utils/commonUtil\";\r\n\r\nconst Options = ({ messageContent,  isOnLeft, messageType, sendJsonMessage, optionRefDec}) => {\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const dialogMessages = useSelector(selectDialogMessages);\r\n    \r\n\r\n    const sendOption = (item) => {\r\n        const [hour, min] = getNowTime();\r\n\t\tlet prefix = \"\";\r\n\t\tswitch (messageType) {\r\n\t\t\tcase \"option-START\":\r\n\t\t\t\tprefix = \"我在\"\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"option-END\":\r\n\t\t\t\tprefix= \"我要去\"\r\n\t\t\t\tbreak\r\n\t\t\tcase \"option-ask\":\r\n\t\t\t\tprefix=\"我的對面是\"\r\n\t\t\t\tbreak\r\n\t\t}\r\n        let message = item\r\n        let inputTextJson = {\r\n\t\t\t'author':\"user\",\r\n\t\t\t'message':message,\r\n\t\t\t'time':hour + ':' + min,\r\n\t\t\t'type':'text'\r\n\t\t}\r\n        dispatch(setDialogMessages(dialogMessages.concat(inputTextJson)))\r\n\r\n        message = prefix + message\r\n        inputTextJson = {\r\n\t\t\t'author':\"user\",\r\n\t\t\t'message':message,\r\n\t\t\t'time':hour + ':' + min,\r\n\t\t\t'type':'text'\r\n\t\t}\r\n        sendJsonMessage(inputTextJson)\r\n\t}\r\n\r\n    const renderItem = ({item,index}) =>{\r\n        return (\r\n            <TouchableOpacity onPress={()=>sendOption(item)} style={[styles.item]}>\r\n                <View>\r\n                    <View style={[styles.titleView]}>\r\n                        {messageType!=\"option-options\" ? <Image style={styles.tinyLogo} source={{uri:'https://appapi-tc.fg-retail.com.tw//Image/Upload/20210926/eee83edf-904a-471b-a421-4a37aa58cd52.jpg'}}/> : null}\r\n                        <Text style={styles.title} >{item}</Text>\r\n                    </View>\r\n                    {optionRefDec==undefined ? null : <Text style={styles.title}>{optionRefDec[index]}</Text>}\r\n                    \r\n                </View>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <View\r\n            style={[\r\n                styles.container,\r\n                isOnLeft(\"messageContainer\"),\r\n            ]}\r\n        >\r\n            <FlatList\r\n                style={styles.flatli}\r\n                extraData={optionRefDec}\r\n                data={messageContent}\r\n                keyExtractor={item => item}\r\n                renderItem={(item,index)=>renderItem(item,index)}\r\n                horizontal={true}\r\n            />\r\n        </View>\r\n    )\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        width:\"100%\",\r\n    },\r\n    tinyLogo: {\r\n        width: 20,\r\n        height: 20,\r\n        margin:\"auto\",\r\n        marginVertical: 3,\r\n        marginHorizontal: 3,\r\n        overflow:\"hidden\",\r\n    },\r\n    flatli:{\r\n        backgroundColor:'white',\r\n    },\r\n    item: {\r\n        backgroundColor: '#48b8e8',\r\n        padding: 10,\r\n        borderRadius:15,\r\n        marginVertical: 10,\r\n        marginHorizontal: 6,\r\n        display:\"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    title:{\r\n\r\n        alignContent:\"center\",\r\n        alignSelf:\"center\",\r\n        justifyContent:\"center\",\r\n        fontSize:20\r\n    },\r\n    titleView:{\r\n        display:\"flex\",\r\n        flexDirection: \"row\",\r\n    }\r\n});\r\n\r\nexport default Options;\r\n","import { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectInstructionTexts } from '../redux/infoSlice';\r\n\r\n\r\nconst Start = ({isOnLeft, sendJsonMessage}) => {\r\n\r\n\tconst instructiontext = useSelector(selectInstructionTexts);\r\n\r\n    const sendStart = () => {\r\n\t\tif (Object.keys(instructiontext).length > 0) {\r\n\t\t\t// console.log('已經按過 START 了');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet inputTextJson = {\r\n\t\t\t'author':\"user\",\r\n\t\t\t'message':\"<:START:>\",\r\n\t\t\t'type':'text'\r\n\t\t}\r\n\t\tsendJsonMessage(inputTextJson);\r\n\t}\r\n\r\n    return (\r\n        <View style={[styles.container]}>\r\n            <View\r\n                style={[\r\n                    styles.messageContainer,\r\n                    isOnLeft(\"startmessageContainer\"),\r\n                ]}\r\n            >\r\n                <TouchableOpacity\r\n                    style={styles.rightIconButtonStyle}\r\n                    onPress={sendStart}\r\n                >\r\n                    <Text style={{color:\"white\"}}>\r\n                        START  \r\n                        <Icon name=\"play\" size={15} color=\"white\" />\r\n                    </Text>\r\n                    \r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tpaddingVertical: 10,\r\n\t\tmarginVertical: 5,\r\n\t},\r\n    messageContainer: {\r\n\t\tbackgroundColor: '#1D2671',\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n    rightIconButtonStyle: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpaddingRight: 20,\r\n\t\tpaddingLeft: 5,\r\n\t},\r\n});\r\n \r\nexport default Start;","import React from \"react\";\r\nimport { View, Text, StyleSheet, Dimensions, TouchableOpacity } from \"react-native\";\r\nimport {\r\n\tPanGestureHandler,\r\n} from \"react-native-gesture-handler\";\r\nimport Animated, {\r\n\tuseAnimatedStyle,\r\n\tuseAnimatedGestureHandler,\r\n\tuseSharedValue,\r\n\twithTiming,\r\n\trunOnJS,\r\n} from \"react-native-reanimated\";\r\nimport { theme } from \"../styling/theme\";\r\n\r\nimport MessageBox from \"./Message.Normal\";\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport ExpandableListV from \"./Message.Expandable\";\r\nimport Options from \"./Message.Options\"\r\nimport * as Speech from 'expo-speech';\r\nimport Start from \"./Message.Start\";\r\n\r\n\r\nconst Message = ({ time, isLeft, message, messageType, floor, index,optionRefDec, setScrollState, sendJsonMessage}) => {\r\n\tconst x = useSharedValue(0);\r\n\tconst largerscale = useSharedValue(12);\r\n\r\n\r\n\tconst AIcon = Animated.createAnimatedComponent(Icon)\r\n\r\n\tconst SCREEN_WIDTH = Dimensions.get('window').width;\r\n\tconst TRANSLATE_X_THRESHOLD = - SCREEN_WIDTH *0.2;\r\n\r\n\tconst isOnLeft = (type) => {\r\n\t\tif (isLeft && type === \"messageContainer\") {\r\n\t\t\treturn {\r\n\t\t\t\talignSelf: \"flex-start\",\r\n\t\t\t\tbackgroundColor: \"#f0f0f0\",\r\n\t\t\t\tborderTopLeftRadius: 0,\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isLeft && type === \"startmessageContainer\"){\r\n\t\t\treturn {\r\n\t\t\t\talignSelf: \"flex-start\",\r\n\t\t\t\tbackgroundColor: \"#1B17E6\",\r\n\t\t\t\tborderTopLeftRadius: 0,\r\n\t\t\t};\r\n\t\t\r\n\t\t}\r\n\t\telse if ((isLeft && type === \"text\") || (isLeft && type ===\"instructiontext\")) {\r\n\t\t\treturn {\r\n\t\t\t\tcolor: \"#000\",\r\n\t\t\t};\r\n\t\t}\r\n\t\telse if (isLeft && type === \"time\") {\r\n\t\t\treturn {\r\n\t\t\t\tcolor: \"darkgray\",\r\n\t\t\t};\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn {\r\n\t\t\t\tborderTopRightRadius: 0,\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\t\r\n\r\n\tconst NoralMsgeventHandler = useAnimatedGestureHandler({\r\n\t\tonActive: (event, ctx) => {\r\n\t\t\tif (isLeft && event.translationX<0){\r\n\t\t\t\tx.value = event.translationX;\r\n\t\t\t\tlargerscale.value =  event.translationX\r\n\t\t\t}\r\n\t\t},\r\n\t\tonEnd: (event, ctx) => {\r\n\t\t\tconst shouldBeDismissed = x.value < TRANSLATE_X_THRESHOLD\r\n\t\t\tif (shouldBeDismissed){\r\n\t\t\t\t// runOnJS(Tts.speak)(message);\r\n\t\t\t\trunOnJS(Speech.speak)(message)\r\n\t\t\t}\r\n\t\t\tx.value = withTiming(0);\r\n\t\t\tlargerscale.value = withTiming(0)\r\n\t\t}\r\n\t});\r\n\r\n\r\n\r\n\tconst rIconStyle = useAnimatedStyle(()=>{\r\n\t\tconst opacity = withTiming(\r\n\t\t\tx.value < TRANSLATE_X_THRESHOLD ? 1 : 1\r\n\t\t);\r\n\t\treturn { opacity }\r\n\t})\r\n\r\n\r\n\r\n\tconst uas = useAnimatedStyle(() => {\r\n\t\treturn {\r\n\t\t\ttransform: [{ translateX: x.value }]\r\n\t\t}\r\n\t});\r\n\r\n\tconst enlarge = useAnimatedStyle(() => {\r\n\t\tconst fontSize = withTiming(\r\n\t\t\tlargerscale.value < TRANSLATE_X_THRESHOLD ? 20 : 12\r\n\t\t);\r\n\t\treturn { fontSize:fontSize }\r\n\t});\r\n\r\n\tswitch(messageType){\r\n\t\tcase 'state':\r\n\t\t\treturn (\r\n\t\t\t\t<Start \r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\r\n\t\tcase 'option-START':\r\n\t\t\treturn (\r\n\t\t\t\t<Options\r\n\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t\toptionRefDec={optionRefDec}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tcase 'option-END':\r\n\t\t\treturn (\r\n\t\t\t\t<Options\r\n\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t\toptionRefDec={optionRefDec}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tcase 'option-ASK':\r\n\t\t\treturn (\r\n\t\t\t\t<Options\r\n\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t\toptionRefDec={optionRefDec}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t\r\n\t\tcase 'option-options':\r\n\t\t\treturn (\r\n\t\t\t\t<Options\r\n\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tcase 'instructiontext':\r\n\t\t\treturn (\r\n\t\t\t\t<ExpandableListV\r\n\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\ttime={time}\r\n\t\t\t\t\tisLeft={isLeft}\r\n\t\t\t\t\tfloor={floor}\r\n\t\t\t\t\t// Tts={Tts}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tcase 'text':\r\n\t\t\treturn (\r\n\t\t\t\t\t<View style={[styles.container]}>\r\n\r\n\t\t\t\t\t\t<PanGestureHandler\r\n\t\t\t\t\t\t\tonGestureEvent={NoralMsgeventHandler}\r\n\t\t\t\t\t\t>\r\n\t\t\r\n\t\t\t\t\t\t\t<Animated.View style={uas}>\r\n\t\t\t\t\t\t\t\t<View\r\n\t\t\t\t\t\t\t\t\tstyle={[\r\n\t\t\t\t\t\t\t\t\t\tstyles.messageContainer,\r\n\t\t\t\t\t\t\t\t\t\tisOnLeft(\"messageContainer\"),\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t<MessageBox\r\n\t\t\t\t\t\t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t\t\t\t\t\t\t\t\tmessageType={messageType}\r\n\t\t\t\t\t\t\t\t\t\tmessageContent={message}\r\n\t\t\t\t\t\t\t\t\t\tisComplete={false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<View style={styles.timeView}>\r\n\t\t\t\t\t\t\t\t\t\t<Text style={[styles.time, isOnLeft(\"time\")]}>\r\n\t\t\t\t\t\t\t\t\t\t\t{time}\r\n\t\t\t\t\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t\t\t<Animated.View style={[styles.iconContainer, rIconStyle]}>\r\n\t\t\t\t\t\t\t\t\t\t<AIcon\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"volume-up\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={theme.colors.description}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={[{left:30},enlarge]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<AIcon\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"long-arrow-left\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor={theme.colors.description}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={[{left:30},enlarge]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Animated.View>\r\n\t\t\r\n\t\t\t\t\t\t\t\t</View>\r\n\t\t\t\t\t\t\t</Animated.View>\r\n\t\t\t\t\t\t</PanGestureHandler>\r\n\r\n\t\t\t\t\t</View>\r\n\t\t\t)\r\n\t\tcase 'image':\r\n\t\t\treturn (\r\n\t\t\t\t// empty view, this has been moved to ChatBot.ImageMap.jsx\r\n\t\t\t\t<View></View>\r\n\t\t\t);\r\n\r\n\t\t\t\r\n\r\n\t\t// \treturn (\r\n\t\t// \t\t<Animated.View style={[styles.container]}>\r\n\t\t// \t\t\t<View\r\n\t\t// \t\t\t\tstyle={[\r\n\t\t// \t\t\t\t\tstyles.messageContainer,\r\n\t\t// \t\t\t\t\tisOnLeft(\"messageContainer\"),\r\n\t\t// \t\t\t\t]}\r\n\t\t// \t\t\t>\r\n\t\t// \t\t\t\t<ImageBox\r\n\t\t// \t\t\t\t\tisOnLeft={isOnLeft}\r\n\t\t// \t\t\t\t\tmessageContent={message}\r\n\t\t// \t\t\t\t\tmessageType={messageType}\r\n\t\t// \t\t\t\t\tfloor={floor}\r\n\t\t// \t\t\t\t\tsetScrollState={setScrollState}\r\n\t\t// \t\t\t\t/>\r\n\t\t// \t\t\t\t<View style={styles.timeView}>\r\n\t\t// \t\t\t\t\t<Text style={[styles.time, isOnLeft(\"time\")]}>\r\n\t\t// \t\t\t\t\t\t{time}\r\n\t\t// \t\t\t\t\t</Text>\r\n\t\t// \t\t\t\t</View>\r\n\t\t// \t\t\t</View>\r\n\t\t// \t\t</Animated.View>\r\n\t\t// \t)\r\n\t}\r\n\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tpaddingVertical: 10,\r\n\t\tmarginVertical: 5,\r\n\t},\r\n\tmessageContainer: {\r\n\t\tbackgroundColor: '#1D2671',\r\n\t\tmaxWidth:\"90%\",\r\n\t\talignSelf: \"flex-end\",\r\n\t\tflexDirection: \"row\",\r\n\t\tborderRadius: 15,\r\n\t\tpaddingHorizontal: 10,\r\n\t\tmarginHorizontal: 10,\r\n\t\tpaddingTop: 8,\r\n\t\tpaddingBottom: 8,\r\n\t\tshadowColor:'grey',\r\n\t\tshadowOpacity:0.3,\r\n\t\tshadowOffset:{\r\n\t\t\twidth:0,\r\n\t\t\theight:3\r\n\t\t},\r\n\t\televation:5,\r\n\t},\r\n\ttimeView: {\r\n\t\tbackgroundColor: \"transparent\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t\tpaddingLeft: 10,\r\n\t},\r\n\ttime: {\r\n\t\tcolor: \"lightgray\",\r\n\t\tfontSize: 10,\r\n\t},\r\n\ticonContainer:{\r\n\t\tjustifyContent:'center',\r\n\t\talignItems:'center',\r\n\t\tfontSize:30,\r\n\t},\r\n});\r\n\r\nexport default Message;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Platform, ScrollView, KeyboardAvoidingView } from \"react-native\";\r\n// import Tts from 'react-native-tts';\r\nimport { theme } from \"../styling/theme\";\r\nimport Message from \"./Message.Main\";\r\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectDialogMessages, selectInstructions, setIndex } from \"../redux/infoSlice\";\r\nimport { selectFloorIndex, selectMapFloor, setFloorArray, setFloorIndex, setMapFloor } from \"../redux/mapSlice\";\r\n\r\n\r\n\r\nconst ChatMessagessList = ({ sendJsonMessage }) => {\r\n\tconst user = useRef(\"user\");\r\n\tconst scrollView = useRef();\r\n\tconst [scrollViewEnable, setScrollViewEnable] = useState(true);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst dialogMessages = useSelector(selectDialogMessages);\r\n\tconst instructions = useSelector(selectInstructions);\r\n\tconst mapFloor = useSelector(selectMapFloor);\r\n\tconst floorIndex = useSelector(selectFloorIndex);\r\n\tuseEffect(() => {\r\n\t\tlet newFloorArray = [];\r\n\t\tfor (var i=0, len=dialogMessages.length; i<len; ++i) {\r\n\t\t\tlet currentMessage = dialogMessages[i];\r\n\t\t\tif (currentMessage['type'] === 'image') {\r\n\t\t\t\tlet floorNumber = Number(currentMessage['floor']);\r\n\t\t\t\tnewFloorArray.push(floorNumber);\r\n\t\t\t\tif (mapFloor == -100) {\r\n\t\t\t\t\tdispatch(setMapFloor(floorNumber));\r\n\t\t\t\t\tdispatch(setIndex(0));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (newFloorArray.length > 0 && floorIndex == -1) {\r\n\t\t\t// 如果 FloorArray 開始有值，floorIndex 還在未定義的狀態: 表示剛開始要導航，這時強制設定floor index = 0\r\n\t\t\tdispatch(setFloorIndex(0));\r\n\t\t}\r\n\t\tdispatch(setFloorArray(newFloorArray)); \r\n    }, [instructions])\r\n\r\n\r\n\treturn (\r\n\t\t<ScrollView style={{ backgroundColor: theme.colors.white, flex: 1 }}\r\n\t\t\tref={scrollView}\r\n\t\t\tonContentSizeChange={() => {\r\n\t\t\t\tscrollView.current.scrollToEnd({ animated: true })\r\n\t\t\t}}\r\n\t\t\tscrollEnabled={scrollViewEnable}\r\n\t\t\t// onTouchEnd={() => { setScrollViewEnable(true) }}\r\n\t\t\t// onTouchStart={(event) => {\r\n\t\t\t// \tif (event.nativeEvent.locationY < 600) setScrollViewEnable(false);\r\n\r\n\t\t\t// }}\r\n\t\t>\r\n\t\t\t<KeyboardAvoidingView\r\n                behavior={Platform && Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n                style={{flex:1}}\r\n              >\r\n\t\t\t\t<GestureHandlerRootView>\r\n\t\t\t\t{dialogMessages.map((message, index) => \r\n\t\t\t\t\t(message.author != undefined) ?\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\ttime={message.time}\r\n\t\t\t\t\t\t\tisLeft={message.author !== user.current}\r\n\t\t\t\t\t\t\tmessage={message.message}\r\n\t\t\t\t\t\t\tmessageType={message.type}\r\n\t\t\t\t\t\t\tfloor={message.floor}\r\n\t\t\t\t\t\t\tindex = {message.index}\r\n\t\t\t\t\t\t\toptionRefDec = {message.optionRefDec}\r\n\t\t\t\t\t\t\tsetScrollState = {setScrollViewEnable}\r\n\t\t\t\t\t\t\tsendJsonMessage={sendJsonMessage}\r\n\t\t\t\t\t\t/> : null\r\n\t\t\t\t)}\r\n\t\t\t\t</GestureHandlerRootView>\r\n\t\t\t</KeyboardAvoidingView>\r\n\r\n\t\t</ScrollView>\r\n\t);\r\n};\r\n\r\nexport default ChatMessagessList;","import { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, StatusBar, Platform  } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectDialogMessages, selectInstructions, selectInstructionTexts, setDialogMessages, setInstructions, setInstructionTexts } from '../redux/infoSlice';\r\nimport useWebSocket, { ReadyState } from 'react-native-use-websocket';\r\nimport ChatHeader from '../components/ChatBot.Header';\r\nimport ChatImageMap from '../components/ChatBot.ImageMap';\r\nimport ChatInput from '../components/ChatBot.InputBox';\r\nimport ChatMessagessList from '../components/ChatBot.MessageList';\r\nimport { DOMAIN_NAME, PORT_WS } from '../utils/commonUtil';\r\n\r\n// websocket url: (local)  ws://10.0.2.2:8000/ws/bots/       ws://127.0.0.1:8000/ws/bots/\r\n// websocket url: (remote) ws://61.219.68.130:808/websocket\r\n\r\n\r\nconst ChatBotScreen = ({navigation}) => {\r\n    const [botname, setBotName] = useState(\"Indoor Navigation\");\r\n\r\n    // use ws: if you test on android Emulator\r\n    let ws_scheme = 'wss:';\r\n    const [socketUrl, setSocketUrl] = useState(`${ws_scheme}//${DOMAIN_NAME}:${PORT_WS}/websocket`);\r\n    const [onlinestatus, setOnlineStatus] = useState(false);\r\n\r\n    // redux\r\n    const dispatch =  useDispatch();\r\n    const instructions = useSelector(selectInstructions);\r\n    const instructiontext = useSelector(selectInstructionTexts);\r\n    const dialogMessages = useSelector(selectDialogMessages);\r\n\r\n    // websocket\r\n    const { sendJsonMessage, lastJsonMessage, readyState } = useWebSocket(socketUrl, {\r\n        onOpen: () => {\r\n            console.log('connected');\r\n            setOnlineStatus(true);\r\n        },\r\n        onError: (err) => {\r\n            console.log(\"[CHATBOTIASL][ERROR][WEBSOCKET]:\", err);\r\n        },\r\n        shouldReconnect: (closeEvent) => true,\r\n        reconnectAttempts: 30,\r\n        reconnectInterval: 3000,\r\n    });\r\n      \r\n    const connectionStatus = {\r\n        [ReadyState.CONNECTING]: \"Connecting\",\r\n        [ReadyState.OPEN]: \"Open\",\r\n        [ReadyState.CLOSING]: \"Closing\",\r\n        [ReadyState.CLOSED]: \"Closed\",\r\n        [ReadyState.UNINSTANTIATED]: \"Uninstantiated\",\r\n    }[readyState];\r\n\r\n    //connectionStatus change UI\r\n    useEffect(()=> {\r\n        setOnlineStatus(connectionStatus === 'Open');\r\n    }, [connectionStatus]);\r\n    \r\n    //onmessage\r\n    useEffect(() => {\r\n        if (Platform.OS != 'web') {\r\n            console.log('message : ',lastJsonMessage);\r\n        }\r\n\r\n        if (lastJsonMessage !== null && lastJsonMessage !== {}) {\r\n            if (lastJsonMessage.instructions !== undefined) {\r\n                try {\r\n                    let newDict = {...instructions, ...lastJsonMessage.instructions};\r\n                    dispatch(setInstructions(newDict));\r\n                }\r\n                catch{}\r\n\r\n                if (lastJsonMessage.type === 'instructiontext') {\r\n                    let newDict2 = JSON.parse(JSON.stringify(instructiontext));\r\n                    newDict2[lastJsonMessage.floor] = lastJsonMessage.message[0];\r\n                    dispatch(setInstructionTexts(newDict2));\r\n                }\r\n            }\r\n\r\n            dispatch(setDialogMessages(dialogMessages.concat(lastJsonMessage)));\r\n        }\r\n    }, [lastJsonMessage]);\r\n\r\n    useEffect(() => {\r\n        console.log('Your platform :', Platform.OS);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <StatusBar backgroundColor=\"#b3e6ff\" barStyle=\"dark-content\" />\r\n            <ChatHeader\r\n                botname={botname}\r\n                locationName={\"遠雄廣場\"}\r\n                onlineStatus={onlinestatus} \r\n                sendJsonMessage={sendJsonMessage}\r\n            />\r\n            <ChatImageMap />\r\n            <ChatMessagessList\r\n                sendJsonMessage={sendJsonMessage}\r\n            />\r\n            <ChatInput\r\n                online={onlinestatus}\r\n                sendJsonMessage={sendJsonMessage}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1\r\n    },\r\n});\r\n \r\nexport default ChatBotScreen;\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { StyleSheet, View, Button, ImageBackground, Text, TouchableOpacity, Platform, SafeAreaView } from 'react-native';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport ReactNativeZoomableView from '@openspacelabs/react-native-zoomable-view/src/ReactNativeZoomableView';\r\nimport Svg ,{ Defs, Marker, Path, Circle } from 'react-native-svg';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Modal from \"react-native-modal\";\r\nimport { selectInstructions, selectInstructionTexts, selectIndex, setIndex, setDialogMessages, setInstructionTexts } from '../redux/infoSlice';\r\nimport { selectMapFloor, selectFloorArray, selectFloorIndex, setFloorIndex, setMapFloor, setFloorArray } from '../redux/mapSlice';\r\nimport { \r\n    calcAngleDegrees, \r\n    changePath, \r\n    computeVector, \r\n    getNowTime, \r\n    getPathCoordinates, \r\n    DOMAIN_NAME, \r\n    HTTP_SCHEME, \r\n    PORT_django, \r\n    rotatePoint, \r\n    rotateRelativeToCenter \r\n} from '../utils/commonUtil';\r\n\r\n\r\nconst MapNavigationScreen = ({route, navigation}) => {\r\n\r\n    const { sendJsonMessage } = route.params;\r\n\r\n    // redux\r\n    const dispatch = useDispatch();\r\n    const instructions = useSelector(selectInstructions);\r\n    const mapFloor = useSelector(selectMapFloor);\r\n\r\n    const instructiontext = useSelector(selectInstructionTexts);\r\n    const infoIndex = useSelector(selectIndex);\r\n    const floorArray = useSelector(selectFloorArray);\r\n    const floorIndex = useSelector(selectFloorIndex);\r\n\r\n    const getNextStepIndices = (shift, curFloorIndex, curInfoIndex) => {\r\n        if (shift < 0) {\r\n            if (curInfoIndex == 0 && curFloorIndex == 0) {\r\n                return {\r\n                    flag: false,\r\n                    result: []\r\n                };\r\n            }\r\n\r\n            if (curInfoIndex != 0) {\r\n                return {\r\n                    flag: true,\r\n                    result: [\r\n                        {index: curInfoIndex - 1}\r\n                    ]\r\n                }\r\n            }\r\n            else {\r\n                let instructArray = instructiontext[floorArray[curFloorIndex-1]][\"subCategory\"];\r\n                return {\r\n                    flag: true,\r\n                    result: [\r\n                        {floor: curFloorIndex - 1},\r\n                        {index: instructArray.length - 1}\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            let instructArray = instructiontext[floorArray[curFloorIndex]][\"subCategory\"];\r\n            if (curFloorIndex == floorArray.length - 1 && curInfoIndex == instructArray.length - 1) {\r\n                return {\r\n                    flag: false,\r\n                    result: []\r\n                };\r\n            }\r\n\r\n            if (curInfoIndex < instructArray.length - 1) {\r\n                return {\r\n                    flag: true,\r\n                    result:[\r\n                        {index: curInfoIndex + 1}\r\n                    ]\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    flag: true,\r\n                    result: [\r\n                        {index: 0},\r\n                        {floor: curFloorIndex + 1}\r\n                    ]\r\n                };\r\n            }\r\n        }\r\n    };\r\n\r\n    const ifGuideStart = () => {\r\n        // console.log('instructiontext !== {}: ,', instructiontext !== {});\r\n        // console.log('floorArray != []: ,', floorArray != []);\r\n\r\n        return floorArray.length > 0 && infoIndex !== -1;\r\n    };\r\n\r\n    const getFutureInstructionText = (currentFloorIndex, currentInfoIndex) => {\r\n        if (!ifGuideStart()) {\r\n            return \"\";\r\n        }\r\n\r\n        const future = getNextStepIndices(1, currentFloorIndex, currentInfoIndex);\r\n        if (!future.flag) {\r\n            return \"(已完成)\";\r\n        }\r\n        else {\r\n            let notyet_floorIndex = currentFloorIndex;\r\n            let notyet_index = currentInfoIndex;\r\n            future.result.forEach((obj) => {\r\n                if (obj.index !== undefined) {\r\n                    notyet_index = obj.index;\r\n                }\r\n                else {\r\n                    notyet_floorIndex = obj.floor;\r\n                }\r\n            });\r\n            return instructiontext[floorArray[notyet_floorIndex]][\"subCategory\"][notyet_index][\"name\"];\r\n        }\r\n    };\r\n\r\n    const [nextInstructionText, setNextInstructionText] = useState(getFutureInstructionText(floorIndex, infoIndex));\r\n\r\n    const goNextStep = (shift) => {\r\n\r\n        const res = getNextStepIndices(shift, floorIndex, infoIndex);\r\n        if (!res.flag) {\r\n            if (shift > 0) {\r\n                // 詢問是否結束導航\r\n                setModalContent(\"你已完成導航路徑，確定要結束嗎?\");\r\n                setIsModalVisible(true);\r\n\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            let newFloorIndex = floorIndex;\r\n            let newIndex = infoIndex;\r\n\r\n            res.result.forEach((obj) => {\r\n                if (obj.index !== undefined) {\r\n                    newIndex = obj.index;\r\n                    dispatch(setIndex(obj.index));\r\n                }\r\n                else {\r\n                    newFloorIndex = obj.floor;\r\n                    dispatch(setFloorIndex(obj.floor));\r\n                    dispatch(setMapFloor(floorArray[obj.floor]));\r\n                }\r\n            });\r\n\r\n            setNextInstructionText(getFutureInstructionText(newFloorIndex, newIndex));\r\n        }\r\n    };\r\n\r\n    // svg\r\n    const [imageURL, setImageURL] = useState(`${HTTP_SCHEME}://${DOMAIN_NAME}:${PORT_django}/static/image/03.jpeg`)\r\n\r\n    const img_width = 1024;\r\n    const img_height = 557;\r\n\r\n    const ratio_img_to_svg = 2.5;\r\n    var svg_width = img_width / ratio_img_to_svg;   // 409.6\r\n    var svg_height = img_height / ratio_img_to_svg; // 222.8\r\n    var viewBoxProps = \"0 0 1024 557\"; // equal to original image's size\r\n\r\n    const [svgPath, setSvgPath] = useState('M 0 0 L 0 0');\r\n\r\n    // ZoomableView centering\r\n    const zoomableViewRef = useRef();\r\n    const initialZoomValue = 4;\r\n    let zoomVal = useRef(initialZoomValue);\r\n    // coordinate of imageCenter, when image center coincides with 畫面 center\r\n    const imageCenter = { x: 0.5*img_width, y: 0.5*img_height };\r\n    const initialBasePoint = {x: 0.5*img_width, y: 0.5*img_height + 160*ratio_img_to_svg/initialZoomValue};\r\n    let basePoint = useRef(initialBasePoint);\r\n    const [angle, setAngle] = useState(0);\r\n\r\n    const scale_to_canvas = (vector) => {\r\n        return [initialZoomValue*(vector.x/ratio_img_to_svg), initialZoomValue*(vector.y/ratio_img_to_svg)];\r\n    };\r\n\r\n    const distance_center_target = (goal) => {\r\n\r\n        const deltaVector = computeVector(imageCenter, goal);\r\n        return scale_to_canvas(deltaVector);\r\n    };\r\n\r\n    let targetPoint = {x: 0, y: 0};\r\n    let [previousMove, setPreviousMove] = useState({x:0, y:0});\r\n    // for base point guide\r\n    let previousAutoTotalMove = useRef({x: 0, y: 0});\r\n    let previousTransformTotalMove = useRef({x: 0, y: 0});\r\n\r\n    const updateBasePoint = (rotation_angle) => {\r\n        const delta_rotation_angle = rotation_angle - angle;\r\n        //console.log(`basePoint 原先為 (${basePoint.current.x}, ${basePoint.current.y})`);\r\n\r\n        let newPoint = rotateRelativeToCenter(basePoint.current, imageCenter, -delta_rotation_angle);\r\n        basePoint.current = {x: newPoint.x, y: newPoint.y};\r\n\r\n        //console.log(`basePoint 更新為 (${basePoint.current.x}, ${basePoint.current.y})`);\r\n    };\r\n\r\n    /** (依圖片中心)順時針轉 ? 度 */ \r\n    const doRotation = (rotation_angle) => {\r\n        // 原本轉角 = angle，現在要更新為 rotation_angle\r\n        setAngle(rotation_angle);\r\n\r\n        // update basePoint coordinate\r\n        updateBasePoint(rotation_angle);\r\n    };\r\n\r\n    const rotateLineToVertical = (point1, point2) => {\r\n        let d = calcAngleDegrees(point2.x-point1.x, point2.y-point1.y);\r\n        let needToRotate = -(d + 90); // 順時針轉 ? relative to unrotate state\r\n\r\n        //console.log('箭頭角度 = ', d, '度, 所以，新的順時鐘轉角 = ', needToRotate, '度');\r\n        doRotation(needToRotate);\r\n\r\n        return needToRotate;\r\n    };\r\n\r\n    const zoomCenteringGuide = (pathPoints) => {\r\n        targetPoint = pathPoints[infoIndex];\r\n        // console.log(\"new point coordinate: \", targetPoint.x, targetPoint.y);\r\n        // console.log(\"previous_move: \", previousMove.x, previousMove.y);\r\n\r\n        // before move, move to original state first!\r\n        zoomableViewRef.current.moveBy(-previousMove.x, -previousMove.y);\r\n        const [disX, disY] = distance_center_target(targetPoint);\r\n        zoomableViewRef.current.moveBy(disX, disY);\r\n        setPreviousMove({x: disX, y: disY});\r\n    };\r\n\r\n    const calibraToOriginalTargetPoint = () => {\r\n        basePointGuide(undefined, true);\r\n    };\r\n\r\n    const basePointGuide_Going = (nowPathPoints) => {\r\n\r\n        let updatedAngle = rotateLineToVertical(nowPathPoints[infoIndex], nowPathPoints[infoIndex+1]);\r\n        let disVector = computeVector(basePoint.current, nowPathPoints[infoIndex]);\r\n        let rotDicVector = rotatePoint(disVector, updatedAngle);\r\n        const [disX, disY] = scale_to_canvas(rotDicVector);\r\n        zoomableViewRef.current.moveBy(disX, disY);\r\n\r\n        // consequence of auto move:\r\n        targetPoint = nowPathPoints[infoIndex];\r\n        basePoint.current = {x: targetPoint.x, y: targetPoint.y};\r\n        previousAutoTotalMove.current = {x: previousAutoTotalMove.current.x + disX, y: previousAutoTotalMove.current.y + disY};\r\n        // 同步: Transform move(by Hand) = Auto Move 等於沒有手移動了\r\n        previousTransformTotalMove.current = previousAutoTotalMove.current;\r\n    };\r\n\r\n    const basePointGuide = (nowPathPoints, calibraOnly) => {\r\n\r\n        if (calibraOnly === false) {\r\n            if (infoIndex == nowPathPoints.length -1) {\r\n                console.log(\"到最後一點了\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        // 先旋轉，再平移 image。 (若一開始位置偏移，就要先校正)\r\n        if (zoomVal.current !== initialZoomValue) {\r\n            // zoomTo() need some time to excute\r\n            zoomableViewRef.current.zoomTo(initialZoomValue);\r\n\r\n            setTimeout(() => {\r\n                const calibraVector = {\r\n                    x: -(previousTransformTotalMove.current.x - previousAutoTotalMove.current.x), \r\n                    y: -(previousTransformTotalMove.current.y - previousAutoTotalMove.current.y)\r\n                };\r\n                zoomableViewRef.current.moveBy(calibraVector.x, calibraVector.y);\r\n                zoomVal.current = initialZoomValue;\r\n\r\n                // Hand move = Auto Move 等於沒有手移動了\r\n                previousTransformTotalMove.current = previousAutoTotalMove.current;\r\n\r\n                if (calibraOnly === false) {\r\n                    basePointGuide_Going(nowPathPoints);\r\n                }\r\n            }, 1200);\r\n        }\r\n        else if (previousTransformTotalMove.current !== previousAutoTotalMove.current) {\r\n            const calibraVector = {\r\n                x: -(previousTransformTotalMove.current.x - previousAutoTotalMove.current.x), \r\n                y: -(previousTransformTotalMove.current.y - previousAutoTotalMove.current.y)\r\n            };\r\n            // 校正時，不須紀錄autoMove\r\n            zoomableViewRef.current.moveBy(calibraVector.x, calibraVector.y);\r\n    \r\n            // 同步: Transform move(by Hand) = Auto Move 等於沒有手移動了\r\n            previousTransformTotalMove.current = previousAutoTotalMove.current;\r\n\r\n            if (calibraOnly === false) {\r\n                basePointGuide_Going(nowPathPoints);\r\n            }\r\n        }\r\n        else {\r\n            if (calibraOnly === false) {\r\n                basePointGuide_Going(nowPathPoints);\r\n            }\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if (mapFloor > -100 && infoIndex >= 0) {\r\n            let tmpInstructions = instructions[mapFloor.toString()];\r\n            let currentPathPoints = getPathCoordinates(tmpInstructions);\r\n            if (infoIndex > 0) {\r\n                tmpInstructions = tmpInstructions.slice(infoIndex);\r\n            }\r\n\r\n            setSvgPath(changePath(tmpInstructions));\r\n            setImageURL(`${HTTP_SCHEME}://${DOMAIN_NAME}:${PORT_django}/static/image/0${mapFloor}.jpeg`);\r\n\r\n\r\n            // display strategy 1\r\n            //zoomCenteringGuide(currentPathPoints);\r\n\r\n            // display strategy 2\r\n            basePointGuide(currentPathPoints, false);\r\n        }\r\n        else {\r\n            // default image before indoor guide\r\n            setSvgPath('M 0 0 L 0 0');\r\n            setImageURL(`https://reactjs.org/logo-og.png`);\r\n        }\r\n    }, [mapFloor, infoIndex]);\r\n\r\n    // modal: use for check\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [modalContent, setModalContent] = useState(\"你已完成導航路徑，確定要結束嗎?\");\r\n    const handleModalCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const handleModal2 = () => {\r\n        setModalContent(\"你還未到達目的地，確定要結束嗎?\");\r\n        setIsModalVisible(true);\r\n    };\r\n    const handleFinish = () => {\r\n        setIsModalVisible(false);\r\n\r\n        navigation.navigate('ChatBot');\r\n\r\n        const [hour, min] = getNowTime();\r\n        sendJsonMessage({\r\n            'author': \"user\",\r\n\t\t\t'type':'text',\r\n\t\t\t'message': '/done',\r\n\t\t\t'time': hour + ':' + min,\r\n        });\r\n        dispatch(setDialogMessages([]));\r\n\t\tdispatch(setInstructionTexts({}));\r\n        dispatch(setMapFloor(-100));\r\n        dispatch(setFloorArray([]));\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={styles.crossPlatformContainer}>\r\n\r\n            <View style={styles.headerContainer}>\r\n                <Button style={styles.goBackView} title=\"回到對話模式\" onPress={() => navigation.goBack()} />\r\n                <TouchableOpacity style={styles.calibrationButtonViewStyle} onPress={() => calibraToOriginalTargetPoint()}>\r\n                    <Text style={styles.calibrationButtonTextStyle}>\r\n                        定位回導航點\r\n                        <MaterialCommunityIcons name=\"crosshairs-gps\" color=\"black\" size={25} />\r\n                    </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.stopButtonViewStyle} onPress={() => handleModal2()}>\r\n                    <Text style={styles.calibrationButtonTextStyle}>\r\n                        結束\r\n                    </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={styles.bodyContainer}>\r\n                <ReactNativeZoomableView\r\n                    maxZoom={10} \r\n                    minZoom={1} \r\n                    zoomStep={0.5} \r\n                    initialZoom={initialZoomValue} \r\n                    bindToBorders={false} \r\n                    //onLongPress = {(event, gestureState) => console.log(gestureState)}\r\n                    \r\n                    // 觀念: image 在任何位置，旋轉角度均不會改變 zoomableViewEventObject的offsetX、offsetY\r\n                    // onShiftingEnd = {(event, gestureState, zoomableViewEventObject) => {\r\n                    //     // console.log(zoomableViewEventObject);\r\n                    //     previousHandTotalMove.current = {x: -zoomableViewEventObject.offsetX*zoomVal.current, y: -zoomableViewEventObject.offsetY*zoomVal.current};\r\n                    // }}\r\n                    // onZoomEnd = {(event, gestureState, zoomableViewEventObject) => {\r\n                    //     zoomVal.current = zoomableViewEventObject.zoomLevel;\r\n                    // }}\r\n                    onTransform = {(zoomableViewEventObject) => {\r\n                        // two possibility: by guesture or by program\r\n                        // console.log('onTransform called', zoomableViewEventObject);\r\n                        zoomVal.current = zoomableViewEventObject.zoomLevel;\r\n                        previousTransformTotalMove.current = {x: -zoomableViewEventObject.offsetX*zoomableViewEventObject.zoomLevel, y: -zoomableViewEventObject.offsetY*zoomableViewEventObject.zoomLevel}\r\n                    }}\r\n                    ref={zoomableViewRef}>\r\n\r\n                    <ImageBackground\r\n                        source={{ uri: imageURL }} \r\n                        style={[\r\n                            styles.bgImageStyle, \r\n                            {\r\n                                width: svg_width, \r\n                                height: svg_height, \r\n                                transform: [{ rotate: `${angle}deg` }, {translateX: 0}]\r\n                            }\r\n                        ]}\r\n                    >\r\n\r\n                        <Svg width={svg_width} height={svg_height} viewBox={viewBoxProps}>\r\n                            <Defs>\r\n                                <Marker\r\n                                    id=\"MapModeTriangle\"\r\n                                    viewBox=\"0 0 10 10\"\r\n                                    refX=\"0\"\r\n                                    refY=\"5\"\r\n                                    markerUnits=\"strokeWidth\"\r\n                                    markerWidth=\"3\"\r\n                                    markerHeight=\"3\"\r\n                                    orient=\"auto\"\r\n                                >\r\n                                    <Path\r\n                                        d=\"M 0 0 L 10 5 L 0 10 z\" \r\n                                        fill=\"black\"\r\n                                        stroke=\"red\"\r\n                                        strokeWidth=\"1\"\r\n                                    />\r\n                                </Marker>\r\n                                <Marker\r\n                                    id=\"MapModestartPoint\"\r\n                                    viewBox=\"0 0 10 10\"\r\n                                    refX=\"5\"\r\n                                    refY=\"5\"\r\n                                    markerUnits=\"strokeWidth\"\r\n                                    markerWidth=\"3\"\r\n                                    markerHeight=\"3\"\r\n                                    orient=\"auto\"\r\n                                >\r\n                                        <Circle \r\n                                            cx=\"5\" \r\n                                            cy=\"5\" \r\n                                            r=\"8\" \r\n                                            fill=\"green\"\r\n                                        />\r\n                                </Marker>\r\n                                <Marker\r\n                                    id=\"MapModemidPoint\"\r\n                                    viewBox=\"0 0 10 10\"\r\n                                    refX=\"5\"\r\n                                    refY=\"5\"\r\n                                    markerUnits=\"strokeWidth\"\r\n                                    markerWidth=\"2\"\r\n                                    markerHeight=\"2\"\r\n                                    orient=\"auto\"\r\n                                >\r\n                                    <Circle cx=\"5\" cy=\"5\" r=\"8\" fill=\"grey\"/>\r\n                                </Marker>\r\n                            </Defs>\r\n\r\n                            <Path\r\n                                d={svgPath}\r\n                                // d=\"M 0 0 L 10 5 L 0 10 z\"\r\n                                fill=\"none\"\r\n                                stroke=\"#ff3333\"\r\n                                strokeWidth=\"5\"\r\n                                markerStart=\"url(#MapModestartPoint)\"\r\n                                markerMid=\"url(#MapModemidPoint)\"\r\n                                markerEnd=\"url(#MapModeTriangle)\"\r\n                            />\r\n                        </Svg>\r\n\r\n                    </ImageBackground>\r\n\r\n                </ReactNativeZoomableView>\r\n            </View>\r\n            \r\n            {\r\n                ifGuideStart() ?\r\n                <View style={styles.bottomContainer}>\r\n                    <View style={styles.guideContainer}>\r\n                        <Text style={styles.mainTextStyle}>\r\n                            {instructiontext[floorArray[floorIndex]][\"subCategory\"][infoIndex][\"name\"]}\r\n                        </Text>\r\n                    </View>\r\n\r\n                    <View style={[styles.multiColumnContaner ]}>\r\n                        <View style={styles.subKeywordViewContainer}>\r\n                            <Text style={styles.subKeywordStyle}>接下來</Text>\r\n                        </View>\r\n                        <View style={styles.subTextViewContainer}>\r\n                            <Text style={styles.subTextStyle}>{nextInstructionText}</Text>\r\n                        </View>\r\n                    </View>\r\n\r\n                    <View style={styles.multiColumnContaner}>\r\n                        <TouchableOpacity style={[styles.paginationButtonContainer, {borderRightColor: \"white\", borderRightWidth: 0.5}]} onPress={() => goNextStep(-1)}>\r\n                            <Text style={styles.buttonTextStyle}>上一步</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity style={[styles.paginationButtonContainer, {borderLeftColor: \"white\", borderLeftWidth: 0.5}]} onPress={() => goNextStep(1)}>\r\n                            <Text style={styles.buttonTextStyle}>下一步</Text>\r\n                        </TouchableOpacity>\r\n\r\n                    </View>\r\n                </View>\r\n                : <View style={styles.bottomContainer}></View>\r\n            }\r\n\r\n\r\n            <Modal isVisible={isModalVisible}>\r\n                <View style={styles.modalViewContainer}>\r\n                    <Text style={styles.modalTextStyle}>{modalContent}</Text>\r\n                    <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n                        <TouchableOpacity onPress={handleFinish}>\r\n                            <Text style={styles.modalYesButtonStyle}>是</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity onPress={handleModalCancel}>\r\n                            <Text style={styles.modalNoButtonStyle}>否</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </SafeAreaView>\r\n\r\n        \r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    crossPlatformContainer: {\r\n        flex: 1,\r\n        paddingTop: Platform.OS === 'android' ? 0 : 0\r\n    },\r\n    headerContainer: {\r\n        alignSelf: 'stretch',\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    bodyContainer: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#EAF0F2\"\r\n    },\r\n    bottomContainer: {\r\n        marginHorizontal: 0,\r\n        backgroundColor: \"red\"\r\n    },\r\n    goBackBotton: {\r\n        flexGrow: 1\r\n    },\r\n    calibrationButtonViewStyle: {\r\n        backgroundColor: \"white\",\r\n        flexGrow: 1\r\n    },\r\n    calibrationButtonTextStyle:{\r\n        color: \"black\",\r\n        textAlign: \"center\",\r\n    },\r\n    stopButtonViewStyle: {\r\n        backgroundColor: \"#e6658c\",\r\n        flexGrow: 1,\r\n        justifyContent: 'center'\r\n    },\r\n    bgImageStyle: {\r\n\t\talignSelf: \"center\",\r\n\t},\r\n\r\n    guideContainer: {\r\n        backgroundColor: '#198039',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 15,\r\n    },\r\n    mainTextStyle: {\r\n        color: \"white\",\r\n        fontSize: 18,\r\n        fontWeight: \"500\",\r\n    },\r\n    multiColumnContaner: {\r\n        flexDirection:'row',\r\n        justifyContent: \"space-between\",\r\n    },\r\n    subKeywordViewContainer: {\r\n        width: 86,\r\n        backgroundColor: \"#eff2d7\",\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 15,\r\n        justifyContent: 'center',\r\n    },\r\n    subKeywordStyle: {\r\n        textAlign: \"center\",\r\n        fontSize: 16,\r\n    },\r\n    subTextViewContainer: {\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 10,\r\n        backgroundColor: \"#d7f3da\",\r\n        flexGrow: 1,\r\n        flexShrink: 1,\r\n    },\r\n    subTextStyle: {\r\n        fontSize: 15,\r\n        textAlign: \"center\",\r\n    },\r\n    paginationButtonContainer: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"#0d662e\",\r\n    },\r\n    buttonTextStyle: {\r\n        paddingVertical: 10,\r\n        textAlign: \"center\",\r\n        fontSize: 14,\r\n        color: \"white\",\r\n        fontWeight: \"500\",\r\n    },\r\n\r\n    modalViewContainer: {\r\n        justifyContent: \"space-between\",\r\n\r\n        backgroundColor: \"white\", \r\n        height: 120, \r\n        borderRadius: 10,\r\n        padding: 15\r\n    },\r\n    modalTextStyle: {\r\n        fontSize: 20,\r\n        textAlign: \"center\",\r\n    },\r\n    modalYesButtonStyle: {\r\n        color: \"#4584fc\",\r\n        paddingHorizontal: 18,\r\n        fontSize: 16,\r\n    },\r\n    modalNoButtonStyle: {\r\n        color: \"#858585\",\r\n        paddingHorizontal: 18,\r\n        fontSize: 16,\r\n    },\r\n})\r\n\r\n\r\nexport default MapNavigationScreen;","import { createStackNavigator  } from '@react-navigation/stack';\r\nimport ChatBotScreen from '../screens/ChatBotScreen';\r\nimport MapNavigationScreen from '../screens/MapNavigationScreen';\r\n\r\n\r\n\r\n// reference: https://reactnavigation.org/docs/stack-navigator/\r\n\r\n// define navigation API\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function MyStack() {\r\n    return (\r\n        <Stack.Navigator \r\n            initialRouteName=\"ChatBot\"\r\n            screenOptions={({ route, navigation }) => ({\r\n                headerShown: false,\r\n                gestureEnabled: true,\r\n          })}\r\n        >\r\n            <Stack.Screen name=\"ChatBot\" component={ChatBotScreen} />\r\n            <Stack.Screen name=\"MapNavigation\" component={MapNavigationScreen} />\r\n        </Stack.Navigator>\r\n    );\r\n}","import { registerRootComponent } from 'expo';\r\nimport { AppRegistry } from 'react-native';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nimport {name as appName} from './app.json';\r\n\r\nregisterRootComponent(App);\r\n","import { Provider } from 'react-redux';\r\nimport { store } from './store';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport MyStack from './routes/MyStack';\r\n\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <NavigationContainer>\r\n        <MyStack />\r\n      </NavigationContainer>\r\n    </Provider>\r\n  );\r\n}\r\n"],"sourceRoot":""}